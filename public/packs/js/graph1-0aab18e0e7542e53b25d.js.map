{"version":3,"file":"js/graph1-0aab18e0e7542e53b25d.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/graph1/graph_viewer.js","webpack:///./app/javascript/graph1/transcription_viewer_icon.js","webpack:///./app/javascript/packs/graph1.js","webpack:///./node_modules/@yomguithereal/helpers/extend.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/graphology-utils/is-graph.js","webpack:///./node_modules/sigma/core/camera.js","webpack:///./node_modules/sigma/core/captors/captor.js","webpack:///./node_modules/sigma/core/captors/mouse.js","webpack:///./node_modules/sigma/core/captors/touch.js","webpack:///./node_modules/sigma/core/labels.js","webpack:///./node_modules/sigma/core/quadtree.js","webpack:///./node_modules/sigma/index.js","webpack:///./node_modules/sigma/rendering/canvas/edge-label.js","webpack:///./node_modules/sigma/rendering/canvas/hover.js","webpack:///./node_modules/sigma/rendering/canvas/label.js","webpack:///./node_modules/sigma/rendering/webgl/programs/common/edge.js","webpack:///./node_modules/sigma/rendering/webgl/programs/common/node.js","webpack:///./node_modules/sigma/rendering/webgl/programs/common/program.js","webpack:///./node_modules/sigma/rendering/webgl/programs/edge.arrow.js","webpack:///./node_modules/sigma/rendering/webgl/programs/edge.arrowHead.js","webpack:///./node_modules/sigma/rendering/webgl/programs/edge.clamped.js","webpack:///./node_modules/sigma/rendering/webgl/programs/edge.js","webpack:///./node_modules/sigma/rendering/webgl/programs/node.fast.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/edge.frag.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/edge.vert.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/node.fast.frag.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/node.fast.vert.glsl.js","webpack:///./node_modules/sigma/rendering/webgl/shaders/utils.js","webpack:///./node_modules/sigma/settings.js","webpack:///./node_modules/sigma/sigma.js","webpack:///./node_modules/sigma/types.js","webpack:///./node_modules/sigma/utils/animate.js","webpack:///./node_modules/sigma/utils/data.js","webpack:///./node_modules/sigma/utils/easings.js","webpack:///./node_modules/sigma/utils/edge-collisions.js","webpack:///./node_modules/sigma/utils/index.js","webpack:///./node_modules/sigma/utils/matrices.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/graph1.js\");\n","// import Graph from \"graphology.umd.min\";\n// let timeline = require(\"../vendor/graphology.min\");\nimport Sigma from \"sigma\";\n\n/*\n  This is displayed in call details as an icon the user clicks on to view \n  render the transcription viewer.\n*/\nexport class GraphViewer extends HTMLElement {\n  constructor() {\n    super();\n\n  }\n\n  handleClick() {\n    \n    console.log('xxxx audioPlayers: clicked' )\n  }\n\n  async connectedCallback() {\n\nconst RED = \"#FA4F40\";\nconst BLUE = \"#727EE0\";\nconst GREEN = \"#5DB346\";\n\n    const pages = await this.getPages();\n    const graph = new Graph();\n\npages.forEach((page) => {\n  console.log(\"name: \" + page.name)\n\n  page.to_pages\n})\n\ngraph.addNode(\"John\", { size: 15, label: \"John\", color: RED });\ngraph.addNode(\"Mary\", { size: 15, label: \"Mary\", color: RED });\ngraph.addNode(\"Suzan\", { size: 15, label: \"Suzan\", color: RED });\ngraph.addNode(\"Nantes\", { size: 15, label: \"Nantes\", color: BLUE });\ngraph.addNode(\"New-York\", { size: 15, label: \"New-York\", color: BLUE });\ngraph.addNode(\"Sushis\", { size: 7, label: \"Sushis\", color: GREEN });\ngraph.addNode(\"Falafels\", { size: 7, label: \"Falafels\", color: GREEN });\ngraph.addNode(\"Kouign Amann\", { size: 7, label: \"Kouign Amann\", color: GREEN });\n\ngraph.addEdge(\"John\", \"Mary\", { type: \"line\", label: \"works with\", size: 5 });\ngraph.addEdge(\"Mary\", \"Suzan\", { type: \"line\", label: \"works with\", size: 5 });\ngraph.addEdge(\"Mary\", \"Nantes\", { type: \"arrow\", label: \"lives in\", size: 5 });\ngraph.addEdge(\"John\", \"New-York\", { type: \"arrow\", label: \"lives in\", size: 5 });\ngraph.addEdge(\"Suzan\", \"New-York\", { type: \"arrow\", label: \"lives in\", size: 5 });\ngraph.addEdge(\"John\", \"Falafels\", { type: \"arrow\", label: \"eats\", size: 5 });\ngraph.addEdge(\"Mary\", \"Sushis\", { type: \"arrow\", label: \"eats\", size: 5 });\ngraph.addEdge(\"Suzan\", \"Kouign Amann\", { type: \"arrow\", label: \"eats\", size: 5 });\n\ngraph.nodes().forEach((node, i) => {\n  const angle = (i * 2 * Math.PI) / graph.order;\n  graph.setNodeAttribute(node, \"x\", 100 * Math.cos(angle));\n  graph.setNodeAttribute(node, \"y\", 100 * Math.sin(angle));\n});\n\n\n\n    this.innerHTML = `\n      <style>\n        html,\n        body,\n        #graph-container {\n          width: 100%;\n          height: 100%;\n          margin: 0;\n          padding: 0;\n          overflow: hidden;\n        }\n      </style>    \n      <h1>Graph Viewer</h1>\n      <i \n        class=\"fa fa-file-text-o fa-lg view_transcription\" \n        title=\"Click to view transcription\"\n        style=\"margin-left:6px;\"\n        data-callid=\"123\"\n      ></i>\n      <div id='graph-container'></div>\n\n    `;\n\n    const container = document.getElementById(\"graph-container\");\n    const renderer = new Sigma(graph, container, {\n      renderEdgeLabels: true,\n    });\n\n\n// Create the spring layout and start it:\n// const layout = new ForceSupervisor(graph);\n// layout.start();\n\n    this.addEventListener(\"click\", this.handleClick);\n  }\n\n  disconnectedCallback() {\n  }\n\n  async getPages() {\n    let pages = [];\n    try {\n      const resp = await fetch(`/pages/all`);\n      pages = await resp.json();\n      console.log(\"[getPages] \" + JSON.stringify(pages))\n    }\n    catch(err) {\n      console.log(`[getPages] Error: ${err}`)\n    }\n\n    return pages;\n  }\n}\n\n\ncustomElements.define(\"graph-viewer\", GraphViewer);\n","\n/*\n  This is displayed in call details as an icon the user clicks on to view \n  render the transcription viewer.\n*/\nexport class TranscriptionViewerIcon extends HTMLElement {\n  constructor() {\n    super();\n\n  }\n\n  handleClick() {\n    \n    console.log('xxxx audioPlayers: clicked' )\n  }\n\n  connectedCallback() {\n    this.innerHTML = `\n      <h1>Component 2</h1>\n      <i \n        class=\"fa fa-file-text-o fa-lg view_transcription\" \n        title=\"Click to view transcription\"\n        style=\"margin-left:6px;\"\n        data-callid=\"123\"\n      ></i>\n\n    `;\n\n    this.addEventListener(\"click\", this.handleClick);\n  }\n\n  disconnectedCallback() {\n  }\n}\n\n\ncustomElements.define(\"transcription-viewer-icon\", TranscriptionViewerIcon);\n","import \"../graph1/transcription_viewer_icon\";\nimport \"../graph1/graph_viewer\";\n","/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n *\n * Its strategy is to mutate target array's length then setting the new indices\n * to be the values to add.\n *\n * A benchmark proved that it is faster than the following strategies:\n *   1) `array.push.apply(array, values)`.\n *   2) A loop of pushes.\n *   3) `array = array.concat(values)`, obviously.\n *\n * Intuitively, this is correct because when adding a lot of elements, the\n * chosen strategies does not need to handle the `arguments` object to\n * execute #.apply's variadicity and because the array know its final length\n * at the beginning, avoiding potential multiple reallocations of the underlying\n * contiguous array. Some engines may be able to optimize the loop of push\n * operations but empirically they don't seem to do so.\n */\n\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - Values to add.\n */\nmodule.exports = function extend(array, values) {\n  var l2 = values.length;\n  if (l2 === 0) return;\n  var l1 = array.length;\n  array.length += l2;\n  for (var i = 0; i < l2; i++) array[l1 + i] = values[i];\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function () {\n    return defaultMaxListeners;\n  },\n  set: function (arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n  return true;\n};\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n  return target;\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n};\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n  return this;\n};\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this;\n\n  // not listening for removeListener, no need to emit\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n  listeners = events[type];\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n  return this;\n};\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n  if (events !== undefined) {\n    var evlistener = events[type];\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n  return 0;\n}\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n  return copy;\n}\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n  list.pop();\n}\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    }\n    ;\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return value !== null && typeof value === 'object' && typeof value.addUndirectedEdgeWithKey === 'function' && typeof value.dropNode === 'function' && typeof value.multi === 'boolean';\n};","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\nvar types_1 = require(\"../types\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */function (_super) {\n  __extends(Camera, _super);\n  function Camera() {\n    var _this = _super.call(this) || this;\n    _this.x = 0.5;\n    _this.y = 0.5;\n    _this.angle = 0;\n    _this.ratio = 1;\n    _this.minRatio = null;\n    _this.maxRatio = null;\n    _this.nextFrame = null;\n    _this.previousState = null;\n    _this.enabled = true;\n    // State\n    _this.previousState = _this.getState();\n    return _this;\n  }\n  /**\n   * Static method used to create a Camera object with a given state.\n   *\n   * @param state\n   * @return {Camera}\n   */\n  Camera.from = function (state) {\n    var camera = new Camera();\n    return camera.setState(state);\n  };\n  /**\n   * Method used to enable the camera.\n   *\n   * @return {Camera}\n   */\n  Camera.prototype.enable = function () {\n    this.enabled = true;\n    return this;\n  };\n  /**\n   * Method used to disable the camera.\n   *\n   * @return {Camera}\n   */\n  Camera.prototype.disable = function () {\n    this.enabled = false;\n    return this;\n  };\n  /**\n   * Method used to retrieve the camera's current state.\n   *\n   * @return {object}\n   */\n  Camera.prototype.getState = function () {\n    return {\n      x: this.x,\n      y: this.y,\n      angle: this.angle,\n      ratio: this.ratio\n    };\n  };\n  /**\n   * Method used to check whether the camera has the given state.\n   *\n   * @return {object}\n   */\n  Camera.prototype.hasState = function (state) {\n    return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n  };\n  /**\n   * Method used to retrieve the camera's previous state.\n   *\n   * @return {object}\n   */\n  Camera.prototype.getPreviousState = function () {\n    var state = this.previousState;\n    if (!state) return null;\n    return {\n      x: state.x,\n      y: state.y,\n      angle: state.angle,\n      ratio: state.ratio\n    };\n  };\n  /**\n   * Method used to check minRatio and maxRatio values.\n   *\n   * @param ratio\n   * @return {number}\n   */\n  Camera.prototype.getBoundedRatio = function (ratio) {\n    var r = ratio;\n    if (typeof this.minRatio === \"number\") r = Math.max(r, this.minRatio);\n    if (typeof this.maxRatio === \"number\") r = Math.min(r, this.maxRatio);\n    return r;\n  };\n  /**\n   * Method used to check various things to return a legit state candidate.\n   *\n   * @param state\n   * @return {object}\n   */\n  Camera.prototype.validateState = function (state) {\n    var validatedState = {};\n    if (typeof state.x === \"number\") validatedState.x = state.x;\n    if (typeof state.y === \"number\") validatedState.y = state.y;\n    if (typeof state.angle === \"number\") validatedState.angle = state.angle;\n    if (typeof state.ratio === \"number\") validatedState.ratio = this.getBoundedRatio(state.ratio);\n    return validatedState;\n  };\n  /**\n   * Method used to check whether the camera is currently being animated.\n   *\n   * @return {boolean}\n   */\n  Camera.prototype.isAnimated = function () {\n    return !!this.nextFrame;\n  };\n  /**\n   * Method used to set the camera's state.\n   *\n   * @param  {object} state - New state.\n   * @return {Camera}\n   */\n  Camera.prototype.setState = function (state) {\n    if (!this.enabled) return this;\n    // TODO: update by function\n    // Keeping track of last state\n    this.previousState = this.getState();\n    var validState = this.validateState(state);\n    if (typeof validState.x === \"number\") this.x = validState.x;\n    if (typeof validState.y === \"number\") this.y = validState.y;\n    if (typeof validState.angle === \"number\") this.angle = validState.angle;\n    if (typeof validState.ratio === \"number\") this.ratio = validState.ratio;\n    // Emitting\n    if (!this.hasState(this.previousState)) this.emit(\"updated\", this.getState());\n    return this;\n  };\n  /**\n   * Method used to update the camera's state using a function.\n   *\n   * @param  {function} updater - Updated function taking current state and\n   *                              returning next state.\n   * @return {Camera}\n   */\n  Camera.prototype.updateState = function (updater) {\n    this.setState(updater(this.getState()));\n    return this;\n  };\n  /**\n   * Method used to animate the camera.\n   *\n   * @param  {object}                    state      - State to reach eventually.\n   * @param  {object}                    opts       - Options:\n   * @param  {number}                      duration - Duration of the animation.\n   * @param  {string | number => number}   easing   - Easing function or name of an existing one\n   * @param  {function}                  callback   - Callback\n   */\n  Camera.prototype.animate = function (state, opts, callback) {\n    var _this = this;\n    if (!this.enabled) return;\n    var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n    var validState = this.validateState(state);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    // State\n    var start = Date.now(),\n      initialState = this.getState();\n    // Function performing the animation\n    var fn = function () {\n      var t = (Date.now() - start) / options.duration;\n      // The animation is over:\n      if (t >= 1) {\n        _this.nextFrame = null;\n        _this.setState(validState);\n        if (_this.animationCallback) {\n          _this.animationCallback.call(null);\n          _this.animationCallback = undefined;\n        }\n        return;\n      }\n      var coefficient = easing(t);\n      var newState = {};\n      if (typeof validState.x === \"number\") newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n      if (typeof validState.y === \"number\") newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n      if (typeof validState.angle === \"number\") newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n      if (typeof validState.ratio === \"number\") newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n      _this.setState(newState);\n      _this.nextFrame = (0, utils_1.requestFrame)(fn);\n    };\n    if (this.nextFrame) {\n      (0, utils_1.cancelFrame)(this.nextFrame);\n      if (this.animationCallback) this.animationCallback.call(null);\n      this.nextFrame = (0, utils_1.requestFrame)(fn);\n    } else {\n      fn();\n    }\n    this.animationCallback = callback;\n  };\n  /**\n   * Method used to zoom the camera.\n   *\n   * @param  {number|object} factorOrOptions - Factor or options.\n   * @return {function}\n   */\n  Camera.prototype.animatedZoom = function (factorOrOptions) {\n    if (!factorOrOptions) {\n      this.animate({\n        ratio: this.ratio / DEFAULT_ZOOMING_RATIO\n      });\n    } else {\n      if (typeof factorOrOptions === \"number\") return this.animate({\n        ratio: this.ratio / factorOrOptions\n      });else this.animate({\n        ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)\n      }, factorOrOptions);\n    }\n  };\n  /**\n   * Method used to unzoom the camera.\n   *\n   * @param  {number|object} factorOrOptions - Factor or options.\n   */\n  Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n    if (!factorOrOptions) {\n      this.animate({\n        ratio: this.ratio * DEFAULT_ZOOMING_RATIO\n      });\n    } else {\n      if (typeof factorOrOptions === \"number\") return this.animate({\n        ratio: this.ratio * factorOrOptions\n      });else this.animate({\n        ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)\n      }, factorOrOptions);\n    }\n  };\n  /**\n   * Method used to reset the camera.\n   *\n   * @param  {object} options - Options.\n   */\n  Camera.prototype.animatedReset = function (options) {\n    this.animate({\n      x: 0.5,\n      y: 0.5,\n      ratio: 1,\n      angle: 0\n    }, options);\n  };\n  /**\n   * Returns a new Camera instance, with the same state as the current camera.\n   *\n   * @return {Camera}\n   */\n  Camera.prototype.copy = function () {\n    return Camera.from(this.getState());\n  };\n  return Camera;\n}(types_1.TypedEventEmitter);\nexports.default = Camera;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;\n/**\n * Sigma.js Captor Class\n * ======================\n * @module\n */\nvar types_1 = require(\"../../types\");\n/**\n * Captor utils functions\n * ======================\n */\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object. If\n * a DOM element is given, it uses this element's offset to compute the position\n * (this allows using events that are not bound to the container itself and\n * still have a proper position).\n *\n * @param  {event}       e - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {number}      The local Y value of the mouse.\n */\nfunction getPosition(e, dom) {\n  var bbox = dom.getBoundingClientRect();\n  return {\n    x: e.clientX - bbox.left,\n    y: e.clientY - bbox.top\n  };\n}\nexports.getPosition = getPosition;\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}       e   - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getMouseCoords(e, dom) {\n  var res = __assign(__assign({}, getPosition(e, dom)), {\n    sigmaDefaultPrevented: false,\n    preventSigmaDefault: function () {\n      res.sigmaDefaultPrevented = true;\n    },\n    original: e\n  });\n  return res;\n}\nexports.getMouseCoords = getMouseCoords;\n/**\n * Convert mouse wheel event coords to sigma coords.\n *\n * @param  {event}       e   - A wheel mouse event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getWheelCoords(e, dom) {\n  return __assign(__assign({}, getMouseCoords(e, dom)), {\n    delta: getWheelDelta(e)\n  });\n}\nexports.getWheelCoords = getWheelCoords;\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n  var arr = [];\n  for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++) arr.push(touches[i]);\n  return arr;\n}\nexports.getTouchesArray = getTouchesArray;\n/**\n * Convert touch coords to sigma coords.\n *\n * @param  {event}       e   - A touch event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getTouchCoords(e, dom) {\n  return {\n    touches: getTouchesArray(e.touches).map(function (touch) {\n      return getPosition(touch, dom);\n    }),\n    original: e\n  };\n}\nexports.getTouchCoords = getTouchCoords;\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n  // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n  if (typeof e.deltaY !== \"undefined\") return e.deltaY * -3 / 360;\n  if (typeof e.detail !== \"undefined\") return e.detail / -9;\n  throw new Error(\"Captor: could not extract delta from event.\");\n}\nexports.getWheelDelta = getWheelDelta;\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /** @class */function (_super) {\n  __extends(Captor, _super);\n  function Captor(container, renderer) {\n    var _this = _super.call(this) || this;\n    // Properties\n    _this.container = container;\n    _this.renderer = renderer;\n    return _this;\n  }\n  return Captor;\n}(types_1.TypedEventEmitter);\nexports.default = Captor;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar captor_1 = __importStar(require(\"./captor\"));\n/**\n * Constants.\n */\nvar DRAG_TIMEOUT = 100;\nvar DRAGGED_EVENTS_TOLERANCE = 3;\nvar MOUSE_INERTIA_DURATION = 200;\nvar MOUSE_INERTIA_RATIO = 3;\nvar MOUSE_ZOOM_DURATION = 250;\nvar ZOOMING_RATIO = 1.7;\nvar DOUBLE_CLICK_TIMEOUT = 300;\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /** @class */function (_super) {\n  __extends(MouseCaptor, _super);\n  function MouseCaptor(container, renderer) {\n    var _this = _super.call(this, container, renderer) || this;\n    // State\n    _this.enabled = true;\n    _this.draggedEvents = 0;\n    _this.downStartTime = null;\n    _this.lastMouseX = null;\n    _this.lastMouseY = null;\n    _this.isMouseDown = false;\n    _this.isMoving = false;\n    _this.movingTimeout = null;\n    _this.startCameraState = null;\n    _this.clicks = 0;\n    _this.doubleClickTimeout = null;\n    _this.currentWheelDirection = 0;\n    // Binding methods\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleRightClick = _this.handleRightClick.bind(_this);\n    _this.handleDown = _this.handleDown.bind(_this);\n    _this.handleUp = _this.handleUp.bind(_this);\n    _this.handleMove = _this.handleMove.bind(_this);\n    _this.handleWheel = _this.handleWheel.bind(_this);\n    _this.handleOut = _this.handleOut.bind(_this);\n    // Binding events\n    container.addEventListener(\"click\", _this.handleClick, false);\n    container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\n    container.addEventListener(\"mousedown\", _this.handleDown, false);\n    container.addEventListener(\"wheel\", _this.handleWheel, false);\n    container.addEventListener(\"mouseout\", _this.handleOut, false);\n    document.addEventListener(\"mousemove\", _this.handleMove, false);\n    document.addEventListener(\"mouseup\", _this.handleUp, false);\n    return _this;\n  }\n  MouseCaptor.prototype.kill = function () {\n    var container = this.container;\n    container.removeEventListener(\"click\", this.handleClick);\n    container.removeEventListener(\"contextmenu\", this.handleRightClick);\n    container.removeEventListener(\"mousedown\", this.handleDown);\n    container.removeEventListener(\"wheel\", this.handleWheel);\n    container.removeEventListener(\"mouseout\", this.handleOut);\n    document.removeEventListener(\"mousemove\", this.handleMove);\n    document.removeEventListener(\"mouseup\", this.handleUp);\n  };\n  MouseCaptor.prototype.handleClick = function (e) {\n    var _this = this;\n    if (!this.enabled) return;\n    this.clicks++;\n    if (this.clicks === 2) {\n      this.clicks = 0;\n      if (typeof this.doubleClickTimeout === \"number\") {\n        clearTimeout(this.doubleClickTimeout);\n        this.doubleClickTimeout = null;\n      }\n      return this.handleDoubleClick(e);\n    }\n    setTimeout(function () {\n      _this.clicks = 0;\n      _this.doubleClickTimeout = null;\n    }, DOUBLE_CLICK_TIMEOUT);\n    // NOTE: this is here to prevent click events on drag\n    if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE) this.emit(\"click\", (0, captor_1.getMouseCoords)(e, this.container));\n  };\n  MouseCaptor.prototype.handleRightClick = function (e) {\n    if (!this.enabled) return;\n    this.emit(\"rightClick\", (0, captor_1.getMouseCoords)(e, this.container));\n  };\n  MouseCaptor.prototype.handleDoubleClick = function (e) {\n    if (!this.enabled) return;\n    e.preventDefault();\n    e.stopPropagation();\n    var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n    this.emit(\"doubleClick\", mouseCoords);\n    if (mouseCoords.sigmaDefaultPrevented) return;\n    // default behavior\n    var camera = this.renderer.getCamera();\n    var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);\n    camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n      easing: \"quadraticInOut\",\n      duration: DOUBLE_CLICK_ZOOMING_DURATION\n    });\n  };\n  MouseCaptor.prototype.handleDown = function (e) {\n    if (!this.enabled) return;\n    // We only start dragging on left button\n    if (e.button === 0) {\n      this.startCameraState = this.renderer.getCamera().getState();\n      var _a = (0, captor_1.getPosition)(e, this.container),\n        x = _a.x,\n        y = _a.y;\n      this.lastMouseX = x;\n      this.lastMouseY = y;\n      this.draggedEvents = 0;\n      this.downStartTime = Date.now();\n      this.isMouseDown = true;\n    }\n    this.emit(\"mousedown\", (0, captor_1.getMouseCoords)(e, this.container));\n  };\n  MouseCaptor.prototype.handleUp = function (e) {\n    var _this = this;\n    if (!this.enabled || !this.isMouseDown) return;\n    var camera = this.renderer.getCamera();\n    this.isMouseDown = false;\n    if (typeof this.movingTimeout === \"number\") {\n      clearTimeout(this.movingTimeout);\n      this.movingTimeout = null;\n    }\n    var _a = (0, captor_1.getPosition)(e, this.container),\n      x = _a.x,\n      y = _a.y;\n    var cameraState = camera.getState(),\n      previousCameraState = camera.getPreviousState() || {\n        x: 0,\n        y: 0\n      };\n    if (this.isMoving) {\n      camera.animate({\n        x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n        y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y)\n      }, {\n        duration: MOUSE_INERTIA_DURATION,\n        easing: \"quadraticOut\"\n      });\n    } else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n      camera.setState({\n        x: cameraState.x,\n        y: cameraState.y\n      });\n    }\n    this.isMoving = false;\n    setTimeout(function () {\n      _this.draggedEvents = 0;\n      // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work\n      // when someone releases camera pan drag after having stopped moving.\n      // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2\n      // See also issue: https://github.com/jacomyal/sigma.js/issues/1290\n      // It could be possible to render instead of scheduling a refresh but for\n      // now it seems good enough.\n      _this.renderer.refresh();\n    }, 0);\n    this.emit(\"mouseup\", (0, captor_1.getMouseCoords)(e, this.container));\n  };\n  MouseCaptor.prototype.handleMove = function (e) {\n    var _this = this;\n    if (!this.enabled) return;\n    var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n    // Always trigger a \"mousemovebody\" event, so that it is possible to develop\n    // a drag-and-drop effect that works even when the mouse is out of the\n    // container:\n    this.emit(\"mousemovebody\", mouseCoords);\n    // Only trigger the \"mousemove\" event when the mouse is actually hovering\n    // the container, to avoid weirdly hovering nodes and/or edges when the\n    // mouse is not hover the container:\n    if (e.target === this.container) {\n      this.emit(\"mousemove\", mouseCoords);\n    }\n    if (mouseCoords.sigmaDefaultPrevented) return;\n    // Handle the case when \"isMouseDown\" all the time, to allow dragging the\n    // stage while the mouse is not hover the container:\n    if (this.isMouseDown) {\n      this.isMoving = true;\n      this.draggedEvents++;\n      if (typeof this.movingTimeout === \"number\") {\n        clearTimeout(this.movingTimeout);\n      }\n      this.movingTimeout = window.setTimeout(function () {\n        _this.movingTimeout = null;\n        _this.isMoving = false;\n      }, DRAG_TIMEOUT);\n      var camera = this.renderer.getCamera();\n      var _a = (0, captor_1.getPosition)(e, this.container),\n        eX = _a.x,\n        eY = _a.y;\n      var lastMouse = this.renderer.viewportToFramedGraph({\n        x: this.lastMouseX,\n        y: this.lastMouseY\n      });\n      var mouse = this.renderer.viewportToFramedGraph({\n        x: eX,\n        y: eY\n      });\n      var offsetX = lastMouse.x - mouse.x,\n        offsetY = lastMouse.y - mouse.y;\n      var cameraState = camera.getState();\n      var x = cameraState.x + offsetX,\n        y = cameraState.y + offsetY;\n      camera.setState({\n        x: x,\n        y: y\n      });\n      this.lastMouseX = eX;\n      this.lastMouseY = eY;\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n  MouseCaptor.prototype.handleWheel = function (e) {\n    var _this = this;\n    if (!this.enabled) return;\n    e.preventDefault();\n    e.stopPropagation();\n    var delta = (0, captor_1.getWheelDelta)(e);\n    if (!delta) return;\n    var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);\n    this.emit(\"wheel\", wheelCoords);\n    if (wheelCoords.sigmaDefaultPrevented) return;\n    // Default behavior\n    var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\n    var camera = this.renderer.getCamera();\n    var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);\n    var wheelDirection = delta > 0 ? 1 : -1;\n    var now = Date.now();\n    // Cancel events that are too close too each other and in the same direction:\n    if (this.currentWheelDirection === wheelDirection && this.lastWheelTriggerTime && now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\n      return;\n    }\n    camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n      easing: \"quadraticOut\",\n      duration: MOUSE_ZOOM_DURATION\n    }, function () {\n      _this.currentWheelDirection = 0;\n    });\n    this.currentWheelDirection = wheelDirection;\n    this.lastWheelTriggerTime = now;\n  };\n  MouseCaptor.prototype.handleOut = function () {\n    // TODO: dispatch event\n  };\n  return MouseCaptor;\n}(captor_1.default);\nexports.default = MouseCaptor;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar captor_1 = __importStar(require(\"./captor\"));\nvar DRAG_TIMEOUT = 200;\nvar TOUCH_INERTIA_RATIO = 3;\nvar TOUCH_INERTIA_DURATION = 200;\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /** @class */function (_super) {\n  __extends(TouchCaptor, _super);\n  function TouchCaptor(container, renderer) {\n    var _this = _super.call(this, container, renderer) || this;\n    _this.enabled = true;\n    _this.isMoving = false;\n    _this.hasMoved = false;\n    _this.touchMode = 0; // number of touches down\n    _this.startTouchesPositions = [];\n    // Binding methods:\n    _this.handleStart = _this.handleStart.bind(_this);\n    _this.handleLeave = _this.handleLeave.bind(_this);\n    _this.handleMove = _this.handleMove.bind(_this);\n    // Binding events\n    container.addEventListener(\"touchstart\", _this.handleStart, false);\n    container.addEventListener(\"touchend\", _this.handleLeave, false);\n    container.addEventListener(\"touchcancel\", _this.handleLeave, false);\n    container.addEventListener(\"touchmove\", _this.handleMove, false);\n    return _this;\n  }\n  TouchCaptor.prototype.kill = function () {\n    var container = this.container;\n    container.removeEventListener(\"touchstart\", this.handleStart);\n    container.removeEventListener(\"touchend\", this.handleLeave);\n    container.removeEventListener(\"touchcancel\", this.handleLeave);\n    container.removeEventListener(\"touchmove\", this.handleMove);\n  };\n  TouchCaptor.prototype.getDimensions = function () {\n    return {\n      width: this.container.offsetWidth,\n      height: this.container.offsetHeight\n    };\n  };\n  TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, touch, emitter) {\n    var mousePosition = touch || e.touches[0];\n    var mouseEvent = new MouseEvent(type, {\n      clientX: mousePosition.clientX,\n      clientY: mousePosition.clientY,\n      altKey: e.altKey,\n      ctrlKey: e.ctrlKey\n    });\n    mouseEvent.isFakeSigmaMouseEvent = true;\n    (emitter || this.container).dispatchEvent(mouseEvent);\n  };\n  TouchCaptor.prototype.handleStart = function (e) {\n    var _this = this;\n    if (!this.enabled) return;\n    // Prevent default to avoid default browser behaviors...\n    e.preventDefault();\n    // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n    if (e.touches.length === 1) this.dispatchRelatedMouseEvent(\"mousedown\", e);\n    var touches = (0, captor_1.getTouchesArray)(e.touches);\n    this.touchMode = touches.length;\n    this.startCameraState = this.renderer.getCamera().getState();\n    this.startTouchesPositions = touches.map(function (touch) {\n      return (0, captor_1.getPosition)(touch, _this.container);\n    });\n    this.lastTouches = touches;\n    this.lastTouchesPositions = this.startTouchesPositions;\n    // When there are two touches down, let's record distance and angle as well:\n    if (this.touchMode === 2) {\n      var _a = __read(this.startTouchesPositions, 2),\n        _b = _a[0],\n        x0 = _b.x,\n        y0 = _b.y,\n        _c = _a[1],\n        x1 = _c.x,\n        y1 = _c.y;\n      this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n      this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n    }\n    this.emit(\"touchdown\", (0, captor_1.getTouchCoords)(e, this.container));\n  };\n  TouchCaptor.prototype.handleLeave = function (e) {\n    if (!this.enabled) return;\n    // Prevent default to avoid default browser behaviors...\n    e.preventDefault();\n    // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n    if (e.touches.length === 0 && this.lastTouches && this.lastTouches.length) {\n      this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouches[0], document);\n      // ... and only click if no move was made\n      if (!this.hasMoved) {\n        this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouches[0]);\n      }\n    }\n    if (this.movingTimeout) {\n      this.isMoving = false;\n      clearTimeout(this.movingTimeout);\n    }\n    switch (this.touchMode) {\n      case 2:\n        if (e.touches.length === 1) {\n          this.handleStart(e);\n          e.preventDefault();\n          break;\n        }\n      /* falls through */\n      case 1:\n        // TODO\n        // Dispatch event\n        if (this.isMoving) {\n          var camera = this.renderer.getCamera();\n          var cameraState = camera.getState(),\n            previousCameraState = camera.getPreviousState() || {\n              x: 0,\n              y: 0\n            };\n          camera.animate({\n            x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n            y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y)\n          }, {\n            duration: TOUCH_INERTIA_DURATION,\n            easing: \"quadraticOut\"\n          });\n        }\n        this.hasMoved = false;\n        this.isMoving = false;\n        this.touchMode = 0;\n        break;\n    }\n    this.emit(\"touchup\", (0, captor_1.getTouchCoords)(e, this.container));\n  };\n  TouchCaptor.prototype.handleMove = function (e) {\n    var _a;\n    var _this = this;\n    if (!this.enabled) return;\n    // Prevent default to avoid default browser behaviors...\n    e.preventDefault();\n    // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n    if (e.touches.length === 1) this.dispatchRelatedMouseEvent(\"mousemove\", e);\n    var touches = (0, captor_1.getTouchesArray)(e.touches);\n    var touchesPositions = touches.map(function (touch) {\n      return (0, captor_1.getPosition)(touch, _this.container);\n    });\n    this.lastTouches = touches;\n    this.lastTouchesPositions = touchesPositions;\n    // If a move was initiated at some point and we get back to startpoint,\n    // we should still consider that we did move (which also happens after a\n    // multiple touch when only one touch remains in which case handleStart\n    // is recalled within handleLeave).\n    // Now, some mobile browsers report zero-distance moves so we also check that\n    // one of the touches did actually move from the origin position.\n    this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {\n      var startPosition = _this.startTouchesPositions[idx];\n      return position.x !== startPosition.x || position.y !== startPosition.y;\n    }));\n    // If there was no move, do not trigger touch moves behavior\n    if (!this.hasMoved) {\n      return;\n    }\n    this.isMoving = true;\n    if (this.movingTimeout) clearTimeout(this.movingTimeout);\n    this.movingTimeout = window.setTimeout(function () {\n      _this.isMoving = false;\n    }, DRAG_TIMEOUT);\n    var camera = this.renderer.getCamera();\n    var startCameraState = this.startCameraState;\n    switch (this.touchMode) {\n      case 1:\n        {\n          var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]),\n            xStart = _b.x,\n            yStart = _b.y;\n          var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]),\n            x = _c.x,\n            y = _c.y;\n          camera.setState({\n            x: startCameraState.x + xStart - x,\n            y: startCameraState.y + yStart - y\n          });\n          break;\n        }\n      case 2:\n        {\n          /**\n           * Here is the thinking here:\n           *\n           * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n           *    of the d'n'd and now\n           *\n           * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n           *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n           *    position of this same touch now\n           */\n          var newCameraState = {};\n          var _d = touchesPositions[0],\n            x0 = _d.x,\n            y0 = _d.y;\n          var _e = touchesPositions[1],\n            x1 = _e.x,\n            y1 = _e.y;\n          var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n          var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n          // 1.\n          var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\n          newCameraState.ratio = newRatio;\n          newCameraState.angle = startCameraState.angle + angleDiff;\n          // 2.\n          var dimensions = this.getDimensions();\n          var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], {\n            cameraState: startCameraState\n          });\n          var smallestDimension = Math.min(dimensions.width, dimensions.height);\n          var dx = smallestDimension / dimensions.width;\n          var dy = smallestDimension / dimensions.height;\n          var ratio = newRatio / smallestDimension;\n          // Align with center of the graph:\n          var x = x0 - smallestDimension / 2 / dx;\n          var y = y0 - smallestDimension / 2 / dy;\n          // Rotate:\n          _a = __read([x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle), y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle)], 2), x = _a[0], y = _a[1];\n          newCameraState.x = touchGraphPosition.x - x * ratio;\n          newCameraState.y = touchGraphPosition.y + y * ratio;\n          camera.setState(newCameraState);\n          break;\n        }\n    }\n    this.emit(\"touchmove\", (0, captor_1.getTouchCoords)(e, this.container));\n  };\n  return TouchCaptor;\n}(captor_1.default);\nexports.default = TouchCaptor;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;\n/**\n * Class representing a single candidate for the label grid selection.\n *\n * It also describes a deterministic way to compare two candidates to assess\n * which one is better.\n */\nvar LabelCandidate = /** @class */function () {\n  function LabelCandidate(key, size) {\n    this.key = key;\n    this.size = size;\n  }\n  LabelCandidate.compare = function (first, second) {\n    // First we compare by size\n    if (first.size > second.size) return -1;\n    if (first.size < second.size) return 1;\n    // Then since no two nodes can have the same key, we use it to\n    // deterministically tie-break by key\n    if (first.key > second.key) return 1;\n    // NOTE: this comparator cannot return 0\n    return -1;\n  };\n  return LabelCandidate;\n}();\n/**\n * Class representing a 2D spatial grid divided into constant-size cells.\n */\nvar LabelGrid = /** @class */function () {\n  function LabelGrid() {\n    this.width = 0;\n    this.height = 0;\n    this.cellSize = 0;\n    this.columns = 0;\n    this.rows = 0;\n    this.cells = {};\n  }\n  LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {\n    this.width = dimensions.width;\n    this.height = dimensions.height;\n    this.cellSize = cellSize;\n    this.columns = Math.ceil(dimensions.width / cellSize);\n    this.rows = Math.ceil(dimensions.height / cellSize);\n    this.cells = {};\n  };\n  LabelGrid.prototype.getIndex = function (pos) {\n    var xIndex = Math.floor(pos.x / this.cellSize);\n    var yIndex = Math.floor(pos.y / this.cellSize);\n    return yIndex * this.columns + xIndex;\n  };\n  LabelGrid.prototype.add = function (key, size, pos) {\n    var candidate = new LabelCandidate(key, size);\n    var index = this.getIndex(pos);\n    var cell = this.cells[index];\n    if (!cell) {\n      cell = [];\n      this.cells[index] = cell;\n    }\n    cell.push(candidate);\n  };\n  LabelGrid.prototype.organize = function () {\n    for (var k in this.cells) {\n      var cell = this.cells[k];\n      cell.sort(LabelCandidate.compare);\n    }\n  };\n  LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {\n    // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\n    // TODO: adjust threshold lower, but increase cells a bit?\n    // TODO: hunt for geom issue in disguise\n    // TODO: memoize while ratio does not move. method to force recompute\n    var cellArea = this.cellSize * this.cellSize;\n    var scaledCellArea = cellArea / ratio / ratio;\n    var scaledDensity = scaledCellArea * density / cellArea;\n    var labelsToDisplayPerCell = Math.ceil(scaledDensity);\n    var labels = [];\n    for (var k in this.cells) {\n      var cell = this.cells[k];\n      for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\n        labels.push(cell[i].key);\n      }\n    }\n    return labels;\n  };\n  return LabelGrid;\n}();\nexports.LabelGrid = LabelGrid;\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n  var graph = params.graph,\n    hoveredNode = params.hoveredNode,\n    highlightedNodes = params.highlightedNodes,\n    displayedNodeLabels = params.displayedNodeLabels;\n  var worthyEdges = [];\n  // TODO: the code below can be optimized using #.forEach and batching the code per adj\n  // We should display an edge's label if:\n  //   - Any of its extremities is highlighted or hovered\n  //   - Both of its extremities has its label shown\n  graph.forEachEdge(function (edge, _, source, target) {\n    if (source === hoveredNode || target === hoveredNode || highlightedNodes.has(source) || highlightedNodes.has(target) || displayedNodeLabels.has(source) && displayedNodeLabels.has(target)) {\n      worthyEdges.push(edge);\n    }\n  });\n  return worthyEdges;\n}\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;\n/**\n * Sigma.js Quad Tree Class\n * =========================\n *\n * Class implementing the quad tree data structure used to solve hovers and\n * determine which elements are currently in the scope of the camera so that\n * we don't waste time rendering things the user cannot see anyway.\n * @module\n */\n/* eslint no-nested-ternary: 0 */\n/* eslint no-constant-condition: 0 */\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\n/**\n * Notes:\n *\n *   - a square can be represented as topleft + width, saying for the quad blocks,\n *     to reduce overall memory usage (which is already pretty low).\n *   - this implementation of a quadtree is often called a MX-CIF quadtree.\n *   - we could explore spatial hashing (hilbert quadtrees, notably).\n */\n/**\n * Constants.\n *\n * Note that since we are representing a static 4-ary tree, the indices of the\n * quadrants are the following:\n *   - TOP_LEFT:     4i + b\n *   - TOP_RIGHT:    4i + 2b\n *   - BOTTOM_LEFT:  4i + 3b\n *   - BOTTOM_RIGHT: 4i + 4b\n */\nvar BLOCKS = 4;\nvar MAX_LEVEL = 5;\n// Outside block is max block index + 1, i.e.:\n// BLOCKS * ((4 * (4 ** MAX_LEVEL) - 1) / 3)\nvar OUTSIDE_BLOCK = 5460;\nvar X_OFFSET = 0;\nvar Y_OFFSET = 1;\nvar WIDTH_OFFSET = 2;\nvar HEIGHT_OFFSET = 3;\nvar TOP_LEFT = 1;\nvar TOP_RIGHT = 2;\nvar BOTTOM_LEFT = 3;\nvar BOTTOM_RIGHT = 4;\nvar hasWarnedTooMuchOutside = false;\n/**\n * Geometry helpers.\n */\n/**\n * Function returning whether the given rectangle is axis-aligned.\n *\n * @param  {Rectangle} rect\n * @return {boolean}\n */\nfunction isRectangleAligned(rect) {\n  return rect.x1 === rect.x2 || rect.y1 === rect.y2;\n}\nexports.isRectangleAligned = isRectangleAligned;\n/**\n * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.\n *\n * @param {Rectangle} rect\n * @return {Rectangle}\n */\nfunction getCircumscribedAlignedRectangle(rect) {\n  var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));\n  var heightVector = {\n    x: (rect.y1 - rect.y2) * rect.height / width,\n    y: (rect.x2 - rect.x1) * rect.height / width\n  };\n  // Compute all corners:\n  var tl = {\n    x: rect.x1,\n    y: rect.y1\n  };\n  var tr = {\n    x: rect.x2,\n    y: rect.y2\n  };\n  var bl = {\n    x: rect.x1 + heightVector.x,\n    y: rect.y1 + heightVector.y\n  };\n  var br = {\n    x: rect.x2 + heightVector.x,\n    y: rect.y2 + heightVector.y\n  };\n  var xL = Math.min(tl.x, tr.x, bl.x, br.x);\n  var xR = Math.max(tl.x, tr.x, bl.x, br.x);\n  var yT = Math.min(tl.y, tr.y, bl.y, br.y);\n  var yB = Math.max(tl.y, tr.y, bl.y, br.y);\n  return {\n    x1: xL,\n    y1: yT,\n    x2: xR,\n    y2: yT,\n    height: yB - yT\n  };\n}\nexports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;\n/**\n *\n * @param x1\n * @param y1\n * @param w\n * @param qx\n * @param qy\n * @param qw\n * @param qh\n */\nfunction squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {\n  return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;\n}\nexports.squareCollidesWithQuad = squareCollidesWithQuad;\nfunction rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {\n  return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;\n}\nexports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;\nfunction pointIsInQuad(x, y, qx, qy, qw, qh) {\n  var xmp = qx + qw / 2,\n    ymp = qy + qh / 2,\n    top = y < ymp,\n    left = x < xmp;\n  return top ? left ? TOP_LEFT : TOP_RIGHT : left ? BOTTOM_LEFT : BOTTOM_RIGHT;\n}\n/**\n * Helper functions that are not bound to the class so an external user\n * cannot mess with them.\n */\nfunction buildQuadrants(maxLevel, data) {\n  // [block, level]\n  var stack = [0, 0];\n  while (stack.length) {\n    var level = stack.pop(),\n      block = stack.pop();\n    var topLeftBlock = 4 * block + BLOCKS,\n      topRightBlock = 4 * block + 2 * BLOCKS,\n      bottomLeftBlock = 4 * block + 3 * BLOCKS,\n      bottomRightBlock = 4 * block + 4 * BLOCKS;\n    var x = data[block + X_OFFSET],\n      y = data[block + Y_OFFSET],\n      width = data[block + WIDTH_OFFSET],\n      height = data[block + HEIGHT_OFFSET],\n      hw = width / 2,\n      hh = height / 2;\n    data[topLeftBlock + X_OFFSET] = x;\n    data[topLeftBlock + Y_OFFSET] = y;\n    data[topLeftBlock + WIDTH_OFFSET] = hw;\n    data[topLeftBlock + HEIGHT_OFFSET] = hh;\n    data[topRightBlock + X_OFFSET] = x + hw;\n    data[topRightBlock + Y_OFFSET] = y;\n    data[topRightBlock + WIDTH_OFFSET] = hw;\n    data[topRightBlock + HEIGHT_OFFSET] = hh;\n    data[bottomLeftBlock + X_OFFSET] = x;\n    data[bottomLeftBlock + Y_OFFSET] = y + hh;\n    data[bottomLeftBlock + WIDTH_OFFSET] = hw;\n    data[bottomLeftBlock + HEIGHT_OFFSET] = hh;\n    data[bottomRightBlock + X_OFFSET] = x + hw;\n    data[bottomRightBlock + Y_OFFSET] = y + hh;\n    data[bottomRightBlock + WIDTH_OFFSET] = hw;\n    data[bottomRightBlock + HEIGHT_OFFSET] = hh;\n    if (level < maxLevel - 1) {\n      stack.push(bottomRightBlock, level + 1);\n      stack.push(bottomLeftBlock, level + 1);\n      stack.push(topRightBlock, level + 1);\n      stack.push(topLeftBlock, level + 1);\n    }\n  }\n}\nfunction insertNode(maxLevel, data, containers, key, x, y, size) {\n  var x1 = x - size,\n    y1 = y - size,\n    w = size * 2;\n  var level = 0,\n    block = 0;\n  while (true) {\n    // If we reached max level\n    if (level >= maxLevel) {\n      containers[block] = containers[block] || [];\n      containers[block].push(key);\n      return;\n    }\n    var topLeftBlock = 4 * block + BLOCKS,\n      topRightBlock = 4 * block + 2 * BLOCKS,\n      bottomLeftBlock = 4 * block + 3 * BLOCKS,\n      bottomRightBlock = 4 * block + 4 * BLOCKS;\n    var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n    var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n    var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n    var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n    var collisions = [collidingWithTopLeft, collidingWithTopRight, collidingWithBottomLeft, collidingWithBottomRight].reduce(function (acc, current) {\n      if (current) return acc + 1;else return acc;\n    }, 0);\n    // If we have no collision at root level, inject node in the outside block\n    if (collisions === 0 && level === 0) {\n      containers[OUTSIDE_BLOCK].push(key);\n      if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {\n        hasWarnedTooMuchOutside = true;\n        console.warn(\"sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. \" + \"You might have a problem with the normalization function or the custom bounding box.\");\n      }\n      return;\n    }\n    // If we don't have at least a collision but deeper, there is an issue\n    if (collisions === 0) throw new Error(\"sigma/quadtree.insertNode: no collision (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n    // If we have 3 collisions, we have a geometry problem obviously\n    if (collisions === 3) throw new Error(\"sigma/quadtree.insertNode: 3 impossible collisions (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n    // If we have more that one collision, we stop here and store the node\n    // in the relevant containers\n    if (collisions > 1) {\n      containers[block] = containers[block] || [];\n      containers[block].push(key);\n      return;\n    } else {\n      level++;\n    }\n    // Else we recurse into the correct quads\n    if (collidingWithTopLeft) block = topLeftBlock;\n    if (collidingWithTopRight) block = topRightBlock;\n    if (collidingWithBottomLeft) block = bottomLeftBlock;\n    if (collidingWithBottomRight) block = bottomRightBlock;\n  }\n}\nfunction getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {\n  // [block, level]\n  var stack = [0, 0];\n  var collectedNodes = [];\n  var container;\n  while (stack.length) {\n    var level = stack.pop(),\n      block = stack.pop();\n    // Collecting nodes\n    container = containers[block];\n    if (container) (0, extend_1.default)(collectedNodes, container);\n    // If we reached max level\n    if (level >= maxLevel) continue;\n    var topLeftBlock = 4 * block + BLOCKS,\n      topRightBlock = 4 * block + 2 * BLOCKS,\n      bottomLeftBlock = 4 * block + 3 * BLOCKS,\n      bottomRightBlock = 4 * block + 4 * BLOCKS;\n    var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n    var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n    var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n    var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n    if (collidingWithTopLeft) stack.push(topLeftBlock, level + 1);\n    if (collidingWithTopRight) stack.push(topRightBlock, level + 1);\n    if (collidingWithBottomLeft) stack.push(bottomLeftBlock, level + 1);\n    if (collidingWithBottomRight) stack.push(bottomRightBlock, level + 1);\n  }\n  return collectedNodes;\n}\n/**\n * QuadTree class.\n *\n * @constructor\n * @param {object} boundaries - The graph boundaries.\n */\nvar QuadTree = /** @class */function () {\n  function QuadTree(params) {\n    var _a;\n    if (params === void 0) {\n      params = {};\n    }\n    this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n    this.cache = null;\n    this.lastRectangle = null;\n    // Allocating the underlying byte array\n    var L = Math.pow(4, MAX_LEVEL);\n    this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));\n    if (params.boundaries) this.resize(params.boundaries);else this.resize({\n      x: 0,\n      y: 0,\n      width: 1,\n      height: 1\n    });\n  }\n  QuadTree.prototype.add = function (key, x, y, size) {\n    insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);\n    return this;\n  };\n  QuadTree.prototype.resize = function (boundaries) {\n    this.clear();\n    // Building the quadrants\n    this.data[X_OFFSET] = boundaries.x;\n    this.data[Y_OFFSET] = boundaries.y;\n    this.data[WIDTH_OFFSET] = boundaries.width;\n    this.data[HEIGHT_OFFSET] = boundaries.height;\n    buildQuadrants(MAX_LEVEL, this.data);\n  };\n  QuadTree.prototype.clear = function () {\n    var _a;\n    this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n    return this;\n  };\n  QuadTree.prototype.point = function (x, y) {\n    var nodes = this.containers[OUTSIDE_BLOCK].slice();\n    var block = 0,\n      level = 0;\n    do {\n      if (this.containers[block]) (0, extend_1.default)(nodes, this.containers[block]);\n      var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);\n      block = 4 * block + quad * BLOCKS;\n      level++;\n    } while (level <= MAX_LEVEL);\n    return nodes;\n  };\n  QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {\n    var lr = this.lastRectangle;\n    if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {\n      return this.cache;\n    }\n    this.lastRectangle = {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      height: height\n    };\n    // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:\n    if (!isRectangleAligned(this.lastRectangle)) this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);\n    this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);\n    // Add all the nodes in the outside block, since they might be relevant, and since they should be very few:\n    (0, extend_1.default)(this.cache, this.containers[OUTSIDE_BLOCK]);\n    return this.cache;\n  };\n  return QuadTree;\n}();\nexports.default = QuadTree;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;\n/**\n * Sigma.js Library Endpoint\n * =========================\n *\n * The library endpoint.\n * @module\n */\nvar sigma_1 = __importDefault(require(\"./sigma\"));\nexports.Sigma = sigma_1.default;\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nexports.Camera = camera_1.default;\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nexports.QuadTree = quadtree_1.default;\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nexports.MouseCaptor = mouse_1.default;\nexports.default = sigma_1.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n  var size = settings.edgeLabelSize,\n    font = settings.edgeLabelFont,\n    weight = settings.edgeLabelWeight,\n    color = settings.edgeLabelColor.attribute ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\" : settings.edgeLabelColor.color;\n  var label = edgeData.label;\n  if (!label) return;\n  context.fillStyle = color;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n  // Computing positions without considering nodes sizes:\n  var sSize = sourceData.size;\n  var tSize = targetData.size;\n  var sx = sourceData.x;\n  var sy = sourceData.y;\n  var tx = targetData.x;\n  var ty = targetData.y;\n  var cx = (sx + tx) / 2;\n  var cy = (sy + ty) / 2;\n  var dx = tx - sx;\n  var dy = ty - sy;\n  var d = Math.sqrt(dx * dx + dy * dy);\n  if (d < sSize + tSize) return;\n  // Adding nodes sizes:\n  sx += dx * sSize / d;\n  sy += dy * sSize / d;\n  tx -= dx * tSize / d;\n  ty -= dy * tSize / d;\n  cx = (sx + tx) / 2;\n  cy = (sy + ty) / 2;\n  dx = tx - sx;\n  dy = ty - sy;\n  d = Math.sqrt(dx * dx + dy * dy);\n  // Handling ellipsis\n  var textLength = context.measureText(label).width;\n  if (textLength > d) {\n    var ellipsis = \"…\";\n    label = label + ellipsis;\n    textLength = context.measureText(label).width;\n    while (textLength > d && label.length > 1) {\n      label = label.slice(0, -2) + ellipsis;\n      textLength = context.measureText(label).width;\n    }\n    if (label.length < 4) return;\n  }\n  var angle;\n  if (dx > 0) {\n    if (dy > 0) angle = Math.acos(dx / d);else angle = Math.asin(dy / d);\n  } else {\n    if (dy > 0) angle = Math.acos(dx / d) + Math.PI;else angle = Math.asin(dx / d) + Math.PI / 2;\n  }\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n  context.restore();\n}\nexports.default = drawEdgeLabel;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar label_1 = __importDefault(require(\"./label\"));\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawHover(context, data, settings) {\n  var size = settings.labelSize,\n    font = settings.labelFont,\n    weight = settings.labelWeight;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n  // Then we draw the label background\n  context.fillStyle = \"#FFF\";\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 8;\n  context.shadowColor = \"#000\";\n  var PADDING = 2;\n  if (typeof data.label === \"string\") {\n    var textWidth = context.measureText(data.label).width,\n      boxWidth = Math.round(textWidth + 5),\n      boxHeight = Math.round(size + 2 * PADDING),\n      radius = Math.max(data.size, size / 2) + PADDING;\n    var angleRadian = Math.asin(boxHeight / 2 / radius);\n    var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n    context.beginPath();\n    context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n    context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n    context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n    context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n    context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n    context.closePath();\n    context.fill();\n  } else {\n    context.beginPath();\n    context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n    context.closePath();\n    context.fill();\n  }\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 0;\n  // And finally we draw the label\n  (0, label_1.default)(context, data, settings);\n}\nexports.default = drawHover;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction drawLabel(context, data, settings) {\n  if (!data.label) return;\n  var size = settings.labelSize,\n    font = settings.labelFont,\n    weight = settings.labelWeight,\n    color = settings.labelColor.attribute ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\" : settings.labelColor.color;\n  context.fillStyle = color;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n  context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEdgeCompoundProgram = exports.AbstractEdgeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Edge Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Edge Program class.\n *\n * @constructor\n */\nvar AbstractEdgeProgram = /** @class */function (_super) {\n  __extends(AbstractEdgeProgram, _super);\n  function AbstractEdgeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n    return _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n  }\n  return AbstractEdgeProgram;\n}(program_1.AbstractProgram);\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\nfunction createEdgeCompoundProgram(programClasses) {\n  return (/** @class */function () {\n      function EdgeCompoundProgram(gl, renderer) {\n        this.programs = programClasses.map(function (ProgramClass) {\n          return new ProgramClass(gl, renderer);\n        });\n      }\n      EdgeCompoundProgram.prototype.bufferData = function () {\n        this.programs.forEach(function (program) {\n          return program.bufferData();\n        });\n      };\n      EdgeCompoundProgram.prototype.allocate = function (capacity) {\n        this.programs.forEach(function (program) {\n          return program.allocate(capacity);\n        });\n      };\n      EdgeCompoundProgram.prototype.bind = function () {\n        // nothing todo, it's already done in each program constructor\n      };\n      EdgeCompoundProgram.prototype.computeIndices = function () {\n        this.programs.forEach(function (program) {\n          return program.computeIndices();\n        });\n      };\n      EdgeCompoundProgram.prototype.render = function (params) {\n        this.programs.forEach(function (program) {\n          program.bind();\n          program.bufferData();\n          program.render(params);\n        });\n      };\n      EdgeCompoundProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        this.programs.forEach(function (program) {\n          return program.process(sourceData, targetData, data, hidden, offset);\n        });\n      };\n      return EdgeCompoundProgram;\n    }()\n  );\n}\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNodeCompoundProgram = exports.AbstractNodeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Node Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Node Program class.\n *\n * @constructor\n */\nvar AbstractNodeProgram = /** @class */function (_super) {\n  __extends(AbstractNodeProgram, _super);\n  function AbstractNodeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n    var _this = _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n    // Locations\n    _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n    _this.sizeLocation = gl.getAttribLocation(_this.program, \"a_size\");\n    _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n    // Uniform Location\n    var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n    if (matrixLocation === null) throw new Error(\"AbstractNodeProgram: error while getting matrixLocation\");\n    _this.matrixLocation = matrixLocation;\n    var ratioLocation = gl.getUniformLocation(_this.program, \"u_ratio\");\n    if (ratioLocation === null) throw new Error(\"AbstractNodeProgram: error while getting ratioLocation\");\n    _this.ratioLocation = ratioLocation;\n    var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n    if (scaleLocation === null) throw new Error(\"AbstractNodeProgram: error while getting scaleLocation\");\n    _this.scaleLocation = scaleLocation;\n    return _this;\n  }\n  AbstractNodeProgram.prototype.bind = function () {\n    var gl = this.gl;\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.enableVertexAttribArray(this.sizeLocation);\n    gl.enableVertexAttribArray(this.colorLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 0);\n    gl.vertexAttribPointer(this.sizeLocation, 1, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 8);\n    gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, this.attributes * Float32Array.BYTES_PER_ELEMENT, 12);\n  };\n  return AbstractNodeProgram;\n}(program_1.AbstractProgram);\nexports.AbstractNodeProgram = AbstractNodeProgram;\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses) {\n  return (/** @class */function () {\n      function NodeCompoundProgram(gl, renderer) {\n        this.programs = programClasses.map(function (ProgramClass) {\n          return new ProgramClass(gl, renderer);\n        });\n      }\n      NodeCompoundProgram.prototype.bufferData = function () {\n        this.programs.forEach(function (program) {\n          return program.bufferData();\n        });\n      };\n      NodeCompoundProgram.prototype.allocate = function (capacity) {\n        this.programs.forEach(function (program) {\n          return program.allocate(capacity);\n        });\n      };\n      NodeCompoundProgram.prototype.bind = function () {\n        // nothing todo, it's already done in each program constructor\n      };\n      NodeCompoundProgram.prototype.render = function (params) {\n        this.programs.forEach(function (program) {\n          program.bind();\n          program.bufferData();\n          program.render(params);\n        });\n      };\n      NodeCompoundProgram.prototype.process = function (data, hidden, offset) {\n        this.programs.forEach(function (program) {\n          return program.process(data, hidden, offset);\n        });\n      };\n      return NodeCompoundProgram;\n    }()\n  );\n}\nexports.createNodeCompoundProgram = createNodeCompoundProgram;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */function () {\n  function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n    this.array = new Float32Array();\n    this.points = points;\n    this.attributes = attributes;\n    this.gl = gl;\n    this.vertexShaderSource = vertexShaderSource;\n    this.fragmentShaderSource = fragmentShaderSource;\n    var buffer = gl.createBuffer();\n    if (buffer === null) throw new Error(\"AbstractProgram: error while creating the buffer\");\n    this.buffer = buffer;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n    this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n    this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n    this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n  }\n  AbstractProgram.prototype.bufferData = function () {\n    var gl = this.gl;\n    gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n  };\n  AbstractProgram.prototype.allocate = function (capacity) {\n    this.array = new Float32Array(this.points * this.attributes * capacity);\n  };\n  AbstractProgram.prototype.hasNothingToRender = function () {\n    return this.array.length === 0;\n  };\n  return AbstractProgram;\n}();\nexports.AbstractProgram = AbstractProgram;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Sigma.js WebGL Renderer Edge Arrow Program\n * ===========================================\n *\n * Compound program rendering edges as an arrow from the source to the target.\n * @module\n */\nvar edge_1 = require(\"./common/edge\");\nvar edge_arrowHead_1 = __importDefault(require(\"./edge.arrowHead\"));\nvar edge_clamped_1 = __importDefault(require(\"./edge.clamped\"));\nvar EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);\nexports.default = EdgeArrowProgram;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"../../../utils\");\nvar edge_arrowHead_vert_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.vert.glsl.js\"));\nvar edge_arrowHead_frag_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 3,\n  ATTRIBUTES = 9,\n  STRIDE = POINTS * ATTRIBUTES;\nvar EdgeArrowHeadProgram = /** @class */function (_super) {\n  __extends(EdgeArrowHeadProgram, _super);\n  function EdgeArrowHeadProgram(gl) {\n    var _this = _super.call(this, gl, edge_arrowHead_vert_glsl_1.default, edge_arrowHead_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n    // Locations\n    _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n    _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n    _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n    _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n    _this.barycentricLocation = gl.getAttribLocation(_this.program, \"a_barycentric\");\n    // Uniform locations\n    var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n    if (matrixLocation === null) throw new Error(\"EdgeArrowHeadProgram: error while getting matrixLocation\");\n    _this.matrixLocation = matrixLocation;\n    var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n    if (sqrtZoomRatioLocation === null) throw new Error(\"EdgeArrowHeadProgram: error while getting sqrtZoomRatioLocation\");\n    _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n    var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n    if (correctionRatioLocation === null) throw new Error(\"EdgeArrowHeadProgram: error while getting correctionRatioLocation\");\n    _this.correctionRatioLocation = correctionRatioLocation;\n    _this.bind();\n    return _this;\n  }\n  EdgeArrowHeadProgram.prototype.bind = function () {\n    var gl = this.gl;\n    // Bindings\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.enableVertexAttribArray(this.normalLocation);\n    gl.enableVertexAttribArray(this.radiusLocation);\n    gl.enableVertexAttribArray(this.colorLocation);\n    gl.enableVertexAttribArray(this.barycentricLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n    gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n    gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n    gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n    // TODO: maybe we can optimize here by packing this in a bit mask\n    gl.vertexAttribPointer(this.barycentricLocation, 3, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 24);\n  };\n  EdgeArrowHeadProgram.prototype.computeIndices = function () {\n    // nothing to do\n  };\n  EdgeArrowHeadProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n    if (hidden) {\n      for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++) this.array[i_1] = 0;\n      return;\n    }\n    var thickness = data.size || 1,\n      radius = targetData.size || 1,\n      x1 = sourceData.x,\n      y1 = sourceData.y,\n      x2 = targetData.x,\n      y2 = targetData.y,\n      color = (0, utils_1.floatColor)(data.color);\n    // Computing normals\n    var dx = x2 - x1,\n      dy = y2 - y1;\n    var len = dx * dx + dy * dy,\n      n1 = 0,\n      n2 = 0;\n    if (len) {\n      len = 1 / Math.sqrt(len);\n      n1 = -dy * len * thickness;\n      n2 = dx * len * thickness;\n    }\n    var i = POINTS * ATTRIBUTES * offset;\n    var array = this.array;\n    // First point\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i++] = radius;\n    array[i++] = color;\n    array[i++] = 1;\n    array[i++] = 0;\n    array[i++] = 0;\n    // Second point\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i++] = radius;\n    array[i++] = color;\n    array[i++] = 0;\n    array[i++] = 1;\n    array[i++] = 0;\n    // Third point\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i++] = radius;\n    array[i++] = color;\n    array[i++] = 0;\n    array[i++] = 0;\n    array[i] = 1;\n  };\n  EdgeArrowHeadProgram.prototype.render = function (params) {\n    if (this.hasNothingToRender()) return;\n    var gl = this.gl;\n    var program = this.program;\n    gl.useProgram(program);\n    // Binding uniforms\n    gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n    gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n    gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n    // Drawing:\n    gl.drawArrays(gl.TRIANGLES, 0, this.array.length / ATTRIBUTES);\n  };\n  return EdgeArrowHeadProgram;\n}(edge_1.AbstractEdgeProgram);\nexports.default = EdgeArrowHeadProgram;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar edge_1 = require(\"./common/edge\");\nvar utils_1 = require(\"../../../utils\");\nvar edge_clamped_vert_glsl_1 = __importDefault(require(\"../shaders/edge.clamped.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar POINTS = 4,\n  ATTRIBUTES = 6,\n  STRIDE = POINTS * ATTRIBUTES;\nvar EdgeClampedProgram = /** @class */function (_super) {\n  __extends(EdgeClampedProgram, _super);\n  function EdgeClampedProgram(gl) {\n    var _this = _super.call(this, gl, edge_clamped_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n    // Initializing indices buffer\n    var indicesBuffer = gl.createBuffer();\n    if (indicesBuffer === null) throw new Error(\"EdgeClampedProgram: error while getting resolutionLocation\");\n    _this.indicesBuffer = indicesBuffer;\n    // Locations:\n    _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n    _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n    _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n    _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n    // Uniform locations\n    var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n    if (matrixLocation === null) throw new Error(\"EdgeClampedProgram: error while getting matrixLocation\");\n    _this.matrixLocation = matrixLocation;\n    var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n    if (sqrtZoomRatioLocation === null) throw new Error(\"EdgeClampedProgram: error while getting cameraRatioLocation\");\n    _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n    var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n    if (correctionRatioLocation === null) throw new Error(\"EdgeClampedProgram: error while getting viewportRatioLocation\");\n    _this.correctionRatioLocation = correctionRatioLocation;\n    // Enabling the OES_element_index_uint extension\n    // NOTE: on older GPUs, this means that really large graphs won't\n    // have all their edges rendered. But it seems that the\n    // `OES_element_index_uint` is quite everywhere so we'll handle\n    // the potential issue if it really arises.\n    // NOTE: when using webgl2, the extension is enabled by default\n    _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);\n    _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n    _this.indicesArray = new _this.IndicesArray();\n    _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n    _this.bind();\n    return _this;\n  }\n  EdgeClampedProgram.prototype.bind = function () {\n    var gl = this.gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n    // Bindings\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.enableVertexAttribArray(this.normalLocation);\n    gl.enableVertexAttribArray(this.colorLocation);\n    gl.enableVertexAttribArray(this.radiusLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n    gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n    gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n    gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n  };\n  EdgeClampedProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n    if (hidden) {\n      for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++) this.array[i_1] = 0;\n      return;\n    }\n    var thickness = data.size || 1,\n      x1 = sourceData.x,\n      y1 = sourceData.y,\n      x2 = targetData.x,\n      y2 = targetData.y,\n      radius = targetData.size || 1,\n      color = (0, utils_1.floatColor)(data.color);\n    // Computing normals\n    var dx = x2 - x1,\n      dy = y2 - y1;\n    var len = dx * dx + dy * dy,\n      n1 = 0,\n      n2 = 0;\n    if (len) {\n      len = 1 / Math.sqrt(len);\n      n1 = -dy * len * thickness;\n      n2 = dx * len * thickness;\n    }\n    var i = POINTS * ATTRIBUTES * offset;\n    var array = this.array;\n    // First point\n    array[i++] = x1;\n    array[i++] = y1;\n    array[i++] = n1;\n    array[i++] = n2;\n    array[i++] = color;\n    array[i++] = 0;\n    // First point flipped\n    array[i++] = x1;\n    array[i++] = y1;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i++] = color;\n    array[i++] = 0;\n    // Second point\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = n1;\n    array[i++] = n2;\n    array[i++] = color;\n    array[i++] = radius;\n    // Second point flipped\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i++] = color;\n    array[i] = -radius;\n  };\n  EdgeClampedProgram.prototype.computeIndices = function () {\n    var l = this.array.length / ATTRIBUTES;\n    var size = l + l / 2;\n    var indices = new this.IndicesArray(size);\n    for (var i = 0, c = 0; i < l; i += 4) {\n      indices[c++] = i;\n      indices[c++] = i + 1;\n      indices[c++] = i + 2;\n      indices[c++] = i + 2;\n      indices[c++] = i + 1;\n      indices[c++] = i + 3;\n    }\n    this.indicesArray = indices;\n  };\n  EdgeClampedProgram.prototype.bufferData = function () {\n    _super.prototype.bufferData.call(this);\n    // Indices data\n    var gl = this.gl;\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n  };\n  EdgeClampedProgram.prototype.render = function (params) {\n    if (this.hasNothingToRender()) return;\n    var gl = this.gl;\n    var program = this.program;\n    gl.useProgram(program);\n    // Binding uniforms\n    gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n    gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n    gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n    // Drawing:\n    gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n  };\n  return EdgeClampedProgram;\n}(edge_1.AbstractEdgeProgram);\nexports.default = EdgeClampedProgram;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Sigma.js WebGL Renderer Edge Program\n * =====================================\n *\n * Program rendering edges as thick lines using four points translated\n * orthogonally from the source & target's centers by half thickness.\n *\n * Rendering two triangles by using only four points is made possible through\n * the use of indices.\n *\n * This method should be faster than the 6 points / 2 triangles approach and\n * should handle thickness better than with gl.LINES.\n *\n * This version of the shader balances geometry computation evenly between\n * the CPU & GPU (normals are computed on the CPU side).\n * @module\n */\nvar utils_1 = require(\"../../../utils\");\nvar edge_vert_glsl_1 = __importDefault(require(\"../shaders/edge.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 4,\n  ATTRIBUTES = 5,\n  STRIDE = POINTS * ATTRIBUTES;\nvar EdgeProgram = /** @class */function (_super) {\n  __extends(EdgeProgram, _super);\n  function EdgeProgram(gl) {\n    var _this = _super.call(this, gl, edge_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n    // Initializing indices buffer\n    var indicesBuffer = gl.createBuffer();\n    if (indicesBuffer === null) throw new Error(\"EdgeProgram: error while creating indicesBuffer\");\n    _this.indicesBuffer = indicesBuffer;\n    // Locations\n    _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n    _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n    _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n    var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n    if (matrixLocation === null) throw new Error(\"EdgeProgram: error while getting matrixLocation\");\n    _this.matrixLocation = matrixLocation;\n    var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n    if (correctionRatioLocation === null) throw new Error(\"EdgeProgram: error while getting correctionRatioLocation\");\n    _this.correctionRatioLocation = correctionRatioLocation;\n    var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n    if (sqrtZoomRatioLocation === null) throw new Error(\"EdgeProgram: error while getting sqrtZoomRatioLocation\");\n    _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n    // Enabling the OES_element_index_uint extension\n    // NOTE: on older GPUs, this means that really large graphs won't\n    // have all their edges rendered. But it seems that the\n    // `OES_element_index_uint` is quite everywhere so we'll handle\n    // the potential issue if it really arises.\n    // NOTE: when using webgl2, the extension is enabled by default\n    _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);\n    _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n    _this.indicesArray = new _this.IndicesArray();\n    _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n    _this.bind();\n    return _this;\n  }\n  EdgeProgram.prototype.bind = function () {\n    var gl = this.gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n    // Bindings\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.enableVertexAttribArray(this.normalLocation);\n    gl.enableVertexAttribArray(this.colorLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n    gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n    gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n  };\n  EdgeProgram.prototype.computeIndices = function () {\n    var l = this.array.length / ATTRIBUTES;\n    var size = l + l / 2;\n    var indices = new this.IndicesArray(size);\n    for (var i = 0, c = 0; i < l; i += 4) {\n      indices[c++] = i;\n      indices[c++] = i + 1;\n      indices[c++] = i + 2;\n      indices[c++] = i + 2;\n      indices[c++] = i + 1;\n      indices[c++] = i + 3;\n    }\n    this.indicesArray = indices;\n  };\n  EdgeProgram.prototype.bufferData = function () {\n    _super.prototype.bufferData.call(this);\n    // Indices data\n    var gl = this.gl;\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n  };\n  EdgeProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n    if (hidden) {\n      for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++) this.array[i_1] = 0;\n      return;\n    }\n    var thickness = data.size || 1,\n      x1 = sourceData.x,\n      y1 = sourceData.y,\n      x2 = targetData.x,\n      y2 = targetData.y,\n      color = (0, utils_1.floatColor)(data.color);\n    // Computing normals\n    var dx = x2 - x1,\n      dy = y2 - y1;\n    var len = dx * dx + dy * dy,\n      n1 = 0,\n      n2 = 0;\n    if (len) {\n      len = 1 / Math.sqrt(len);\n      n1 = -dy * len * thickness;\n      n2 = dx * len * thickness;\n    }\n    var i = POINTS * ATTRIBUTES * offset;\n    var array = this.array;\n    // First point\n    array[i++] = x1;\n    array[i++] = y1;\n    array[i++] = n1;\n    array[i++] = n2;\n    array[i++] = color;\n    // First point flipped\n    array[i++] = x1;\n    array[i++] = y1;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i++] = color;\n    // Second point\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = n1;\n    array[i++] = n2;\n    array[i++] = color;\n    // Second point flipped\n    array[i++] = x2;\n    array[i++] = y2;\n    array[i++] = -n1;\n    array[i++] = -n2;\n    array[i] = color;\n  };\n  EdgeProgram.prototype.render = function (params) {\n    if (this.hasNothingToRender()) return;\n    var gl = this.gl;\n    var program = this.program;\n    gl.useProgram(program);\n    gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n    gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n    gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n    // Drawing:\n    gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n  };\n  return EdgeProgram;\n}(edge_1.AbstractEdgeProgram);\nexports.default = EdgeProgram;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"../../../utils\");\nvar node_fast_vert_glsl_1 = __importDefault(require(\"../shaders/node.fast.vert.glsl.js\"));\nvar node_fast_frag_glsl_1 = __importDefault(require(\"../shaders/node.fast.frag.glsl.js\"));\nvar node_1 = require(\"./common/node\");\nvar POINTS = 1,\n  ATTRIBUTES = 4;\nvar NodeFastProgram = /** @class */function (_super) {\n  __extends(NodeFastProgram, _super);\n  function NodeFastProgram(gl) {\n    var _this = _super.call(this, gl, node_fast_vert_glsl_1.default, node_fast_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n    _this.bind();\n    return _this;\n  }\n  NodeFastProgram.prototype.process = function (data, hidden, offset) {\n    var array = this.array;\n    var i = offset * POINTS * ATTRIBUTES;\n    if (hidden) {\n      array[i++] = 0;\n      array[i++] = 0;\n      array[i++] = 0;\n      array[i++] = 0;\n      return;\n    }\n    var color = (0, utils_1.floatColor)(data.color);\n    array[i++] = data.x;\n    array[i++] = data.y;\n    array[i++] = data.size;\n    array[i] = color;\n  };\n  NodeFastProgram.prototype.render = function (params) {\n    if (this.hasNothingToRender()) return;\n    var gl = this.gl;\n    var program = this.program;\n    gl.useProgram(program);\n    gl.uniform1f(this.ratioLocation, 1 / Math.sqrt(params.ratio));\n    gl.uniform1f(this.scaleLocation, params.scalingRatio);\n    gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n    gl.drawArrays(gl.POINTS, 0, this.array.length / ATTRIBUTES);\n  };\n  return NodeFastProgram;\n}(node_1.AbstractNodeProgram);\nexports.default = NodeFastProgram;","(() => {\n  \"use strict\";\n\n  var e = {\n      d: (o, r) => {\n        for (var t in r) e.o(r, t) && !e.o(o, t) && Object.defineProperty(o, t, {\n          enumerable: !0,\n          get: r[t]\n        });\n      },\n      o: (e, o) => Object.prototype.hasOwnProperty.call(e, o),\n      r: e => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    o = {};\n  e.r(o), e.d(o, {\n    default: () => r\n  });\n  const r = \"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";\n  module.exports = o;\n})();","(() => {\n  \"use strict\";\n\n  var a = {\n      d: (e, t) => {\n        for (var o in t) a.o(t, o) && !a.o(e, o) && Object.defineProperty(e, o, {\n          enumerable: !0,\n          get: t[o]\n        });\n      },\n      o: (a, e) => Object.prototype.hasOwnProperty.call(a, e),\n      r: a => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(a, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    e = {};\n  a.r(e), a.d(e, {\n    default: () => t\n  });\n  const t = \"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n  float adaptedWebGLNodeRadius = a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float adaptedWebGLArrowHeadHalfWidth = adaptedWebGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (adaptedWebGLNodeRadius * unitNormal.y)\\n    + db * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y + adaptedWebGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y - adaptedWebGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-adaptedWebGLNodeRadius * unitNormal.x)\\n    + db * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x + adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x - adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";\n  module.exports = e;\n})();","(() => {\n  \"use strict\";\n\n  var e = {\n      d: (o, n) => {\n        for (var t in n) e.o(n, t) && !e.o(o, t) && Object.defineProperty(o, t, {\n          enumerable: !0,\n          get: n[t]\n        });\n      },\n      o: (e, o) => Object.prototype.hasOwnProperty.call(e, o),\n      r: e => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    o = {};\n  e.r(o), e.d(o, {\n    default: () => n\n  });\n  const n = \"attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\nattribute float a_radius;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(a_radius);\\n  float adaptedWebGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";\n  module.exports = o;\n})();","(() => {\n  \"use strict\";\n\n  var e = {\n      d: (n, t) => {\n        for (var o in t) e.o(t, o) && !e.o(n, o) && Object.defineProperty(n, o, {\n          enumerable: !0,\n          get: t[o]\n        });\n      },\n      o: (e, n) => Object.prototype.hasOwnProperty.call(e, n),\n      r: e => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    n = {};\n  e.r(n), e.d(n, {\n    default: () => t\n  });\n  const t = \"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n}\\n\";\n  module.exports = n;\n})();","(() => {\n  \"use strict\";\n\n  var e = {\n      d: (n, o) => {\n        for (var t in o) e.o(o, t) && !e.o(n, t) && Object.defineProperty(n, t, {\n          enumerable: !0,\n          get: o[t]\n        });\n      },\n      o: (e, n) => Object.prototype.hasOwnProperty.call(e, n),\n      r: e => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    n = {};\n  e.r(n), e.d(n, {\n    default: () => o\n  });\n  const o = 'attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // We require edges to be at least `minThickness` pixels thick *on screen*\\n  // (so we need to compensate the SQRT zoom ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \"magic\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n\\n  // Finally, we adapt the edge thickness to the \"SQRT rule\" in sigma (so that\\n  // items are not too big when zoomed in, and not too small when zoomed out).\\n  // The exact computation should be `adapted = value * zoom / sqrt(zoom)`, but\\n  // it\\'s simpler like this:\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \"magic\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasing effect does not depend on the zoom level. So here\\'s yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n';\n  module.exports = n;\n})();","(() => {\n  \"use strict\";\n\n  var e = {\n      d: (n, o) => {\n        for (var t in o) e.o(o, t) && !e.o(n, t) && Object.defineProperty(n, t, {\n          enumerable: !0,\n          get: o[t]\n        });\n      },\n      o: (e, n) => Object.prototype.hasOwnProperty.call(e, n),\n      r: e => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    n = {};\n  e.r(n), e.d(n, {\n    default: () => o\n  });\n  const o = \"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n}\\n\";\n  module.exports = n;\n})();","(() => {\n  \"use strict\";\n\n  var o = {\n      d: (t, e) => {\n        for (var n in e) o.o(e, n) && !o.o(t, n) && Object.defineProperty(t, n, {\n          enumerable: !0,\n          get: e[n]\n        });\n      },\n      o: (o, t) => Object.prototype.hasOwnProperty.call(o, t),\n      r: o => {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(o, \"__esModule\", {\n          value: !0\n        });\n      }\n    },\n    t = {};\n  o.r(t), o.d(t, {\n    default: () => e\n  });\n  const e = \"attribute vec2 a_position;\\nattribute float a_size;\\nattribute vec4 a_color;\\n\\nuniform float u_ratio;\\nuniform float u_scale;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size * u_ratio * u_scale * 2.0;\\n\\n  v_border = (1.0 / u_ratio) * (0.5 / a_size);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";\n  module.exports = t;\n})();","\"use strict\";\n\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n  var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n  // Creating the shader\n  var shader = gl.createShader(glType);\n  if (shader === null) {\n    throw new Error(\"loadShader: error while creating the shader\");\n  }\n  // Loading source\n  gl.shaderSource(shader, source);\n  // Compiling the shader\n  gl.compileShader(shader);\n  // Retrieving compilation status\n  var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  // Throwing if something went awry\n  if (!successfullyCompiled) {\n    var infoLog = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n  }\n  return shader;\n}\nfunction loadVertexShader(gl, source) {\n  return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n  return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n  var program = gl.createProgram();\n  if (program === null) {\n    throw new Error(\"loadProgram: error while creating the program.\");\n  }\n  var i, l;\n  // Attaching the shaders\n  for (i = 0, l = shaders.length; i < l; i++) gl.attachShader(program, shaders[i]);\n  gl.linkProgram(program);\n  // Checking status\n  var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!successfullyLinked) {\n    gl.deleteProgram(program);\n    throw new Error(\"loadProgram: error while linking the program.\");\n  }\n  return program;\n}\nexports.loadProgram = loadProgram;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveSettings = exports.validateSettings = exports.DEFAULT_EDGE_PROGRAM_CLASSES = exports.DEFAULT_NODE_PROGRAM_CLASSES = exports.DEFAULT_SETTINGS = void 0;\nvar utils_1 = require(\"./utils\");\nvar label_1 = __importDefault(require(\"./rendering/canvas/label\"));\nvar hover_1 = __importDefault(require(\"./rendering/canvas/hover\"));\nvar edge_label_1 = __importDefault(require(\"./rendering/canvas/edge-label\"));\nvar node_fast_1 = __importDefault(require(\"./rendering/webgl/programs/node.fast\"));\nvar edge_1 = __importDefault(require(\"./rendering/webgl/programs/edge\"));\nvar edge_arrow_1 = __importDefault(require(\"./rendering/webgl/programs/edge.arrow\"));\nexports.DEFAULT_SETTINGS = {\n  // Performance\n  hideEdgesOnMove: false,\n  hideLabelsOnMove: false,\n  renderLabels: true,\n  renderEdgeLabels: false,\n  enableEdgeClickEvents: false,\n  enableEdgeWheelEvents: false,\n  enableEdgeHoverEvents: false,\n  // Component rendering\n  defaultNodeColor: \"#999\",\n  defaultNodeType: \"circle\",\n  defaultEdgeColor: \"#ccc\",\n  defaultEdgeType: \"line\",\n  labelFont: \"Arial\",\n  labelSize: 14,\n  labelWeight: \"normal\",\n  labelColor: {\n    color: \"#000\"\n  },\n  edgeLabelFont: \"Arial\",\n  edgeLabelSize: 14,\n  edgeLabelWeight: \"normal\",\n  edgeLabelColor: {\n    attribute: \"color\"\n  },\n  stagePadding: 30,\n  // Labels\n  labelDensity: 1,\n  labelGridCellSize: 100,\n  labelRenderedSizeThreshold: 6,\n  // Reducers\n  nodeReducer: null,\n  edgeReducer: null,\n  // Features\n  zIndex: false,\n  minCameraRatio: null,\n  maxCameraRatio: null,\n  // Renderers\n  labelRenderer: label_1.default,\n  hoverRenderer: hover_1.default,\n  edgeLabelRenderer: edge_label_1.default,\n  // Lifecycle\n  allowInvalidContainer: false,\n  // Program classes\n  nodeProgramClasses: {},\n  nodeHoverProgramClasses: {},\n  edgeProgramClasses: {}\n};\nexports.DEFAULT_NODE_PROGRAM_CLASSES = {\n  circle: node_fast_1.default\n};\nexports.DEFAULT_EDGE_PROGRAM_CLASSES = {\n  arrow: edge_arrow_1.default,\n  line: edge_1.default\n};\nfunction validateSettings(settings) {\n  if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\n    throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\n  }\n  var minCameraRatio = settings.minCameraRatio,\n    maxCameraRatio = settings.maxCameraRatio;\n  if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\n    throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\n  }\n}\nexports.validateSettings = validateSettings;\nfunction resolveSettings(settings) {\n  var resolvedSettings = (0, utils_1.assign)({}, exports.DEFAULT_SETTINGS, settings);\n  resolvedSettings.nodeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);\n  resolvedSettings.edgeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);\n  return resolvedSettings;\n}\nexports.resolveSettings = resolveSettings;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar labels_1 = require(\"./core/labels\");\nvar settings_1 = require(\"./settings\");\nvar touch_1 = __importDefault(require(\"./core/captors/touch\"));\nvar matrices_1 = require(\"./utils/matrices\");\nvar edge_collisions_1 = require(\"./utils/edge-collisions\");\n/**\n * Constants.\n */\nvar X_LABEL_MARGIN = 150;\nvar Y_LABEL_MARGIN = 50;\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n  if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\")) throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\n  if (!data.color) data.color = settings.defaultNodeColor;\n  if (!data.label && data.label !== \"\") data.label = null;\n  if (data.label !== undefined && data.label !== null) data.label = \"\" + data.label;else data.label = null;\n  if (!data.size) data.size = 2;\n  if (!data.hasOwnProperty(\"hidden\")) data.hidden = false;\n  if (!data.hasOwnProperty(\"highlighted\")) data.highlighted = false;\n  if (!data.hasOwnProperty(\"forceLabel\")) data.forceLabel = false;\n  if (!data.type || data.type === \"\") data.type = settings.defaultNodeType;\n  if (!data.zIndex) data.zIndex = 0;\n  return data;\n}\nfunction applyEdgeDefaults(settings, key, data) {\n  if (!data.color) data.color = settings.defaultEdgeColor;\n  if (!data.label) data.label = \"\";\n  if (!data.size) data.size = 0.5;\n  if (!data.hasOwnProperty(\"hidden\")) data.hidden = false;\n  if (!data.hasOwnProperty(\"forceLabel\")) data.forceLabel = false;\n  if (!data.type || data.type === \"\") data.type = settings.defaultEdgeType;\n  if (!data.zIndex) data.zIndex = 0;\n  return data;\n}\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma = /** @class */function (_super) {\n  __extends(Sigma, _super);\n  function Sigma(graph, container, settings) {\n    if (settings === void 0) {\n      settings = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.elements = {};\n    _this.canvasContexts = {};\n    _this.webGLContexts = {};\n    _this.activeListeners = {};\n    _this.quadtree = new quadtree_1.default();\n    _this.labelGrid = new labels_1.LabelGrid();\n    _this.nodeDataCache = {};\n    _this.edgeDataCache = {};\n    _this.nodesWithForcedLabels = [];\n    _this.edgesWithForcedLabels = [];\n    _this.nodeExtent = {\n      x: [0, 1],\n      y: [0, 1]\n    };\n    _this.matrix = (0, matrices_1.identity)();\n    _this.invMatrix = (0, matrices_1.identity)();\n    _this.correctionRatio = 1;\n    _this.customBBox = null;\n    _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({\n      x: [0, 1],\n      y: [0, 1]\n    });\n    // Cache:\n    _this.cameraSizeRatio = 1;\n    // Starting dimensions and pixel ratio\n    _this.width = 0;\n    _this.height = 0;\n    _this.pixelRatio = (0, utils_1.getPixelRatio)();\n    // State\n    _this.displayedLabels = new Set();\n    _this.highlightedNodes = new Set();\n    _this.hoveredNode = null;\n    _this.hoveredEdge = null;\n    _this.renderFrame = null;\n    _this.renderHighlightedNodesFrame = null;\n    _this.needToProcess = false;\n    _this.needToSoftProcess = false;\n    _this.checkEdgesEventsFrame = null;\n    // Programs\n    _this.nodePrograms = {};\n    _this.nodeHoverPrograms = {};\n    _this.edgePrograms = {};\n    // Resolving settings\n    _this.settings = (0, settings_1.resolveSettings)(settings);\n    // Validating\n    (0, settings_1.validateSettings)(_this.settings);\n    (0, utils_1.validateGraph)(graph);\n    if (!(container instanceof HTMLElement)) throw new Error(\"Sigma: container should be an html element.\");\n    // Properties\n    _this.graph = graph;\n    _this.container = container;\n    // Initializing contexts\n    _this.createWebGLContext(\"edges\", {\n      preserveDrawingBuffer: true\n    });\n    _this.createCanvasContext(\"edgeLabels\");\n    _this.createWebGLContext(\"nodes\");\n    _this.createCanvasContext(\"labels\");\n    _this.createCanvasContext(\"hovers\");\n    _this.createWebGLContext(\"hoverNodes\");\n    _this.createCanvasContext(\"mouse\");\n    // Blending\n    for (var key in _this.webGLContexts) {\n      var gl = _this.webGLContexts[key];\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.enable(gl.BLEND);\n    }\n    // Loading programs\n    for (var type in _this.settings.nodeProgramClasses) {\n      var NodeProgramClass = _this.settings.nodeProgramClasses[type];\n      _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);\n      var NodeHoverProgram = NodeProgramClass;\n      if (type in _this.settings.nodeHoverProgramClasses) {\n        NodeHoverProgram = _this.settings.nodeHoverProgramClasses[type];\n      }\n      _this.nodeHoverPrograms[type] = new NodeHoverProgram(_this.webGLContexts.hoverNodes, _this);\n    }\n    for (var type in _this.settings.edgeProgramClasses) {\n      var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\n      _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);\n    }\n    // Initial resize\n    _this.resize();\n    // Initializing the camera\n    _this.camera = new camera_1.default();\n    // Binding camera events\n    _this.bindCameraHandlers();\n    // Initializing captors\n    _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);\n    _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);\n    // Binding event handlers\n    _this.bindEventHandlers();\n    // Binding graph handlers\n    _this.bindGraphHandlers();\n    // Trigger eventual settings-related things\n    _this.handleSettingsUpdate();\n    // Processing data for the first time & render\n    _this.process();\n    _this.render();\n    return _this;\n  }\n  /**---------------------------------------------------------------------------\n   * Internal methods.\n   **---------------------------------------------------------------------------\n   */\n  /**\n   * Internal function used to create a canvas element.\n   * @param  {string} id - Context's id.\n   * @return {Sigma}\n   */\n  Sigma.prototype.createCanvas = function (id) {\n    var canvas = (0, utils_1.createElement)(\"canvas\", {\n      position: \"absolute\"\n    }, {\n      class: \"sigma-\".concat(id)\n    });\n    this.elements[id] = canvas;\n    this.container.appendChild(canvas);\n    return canvas;\n  };\n  /**\n   * Internal function used to create a canvas context and add the relevant\n   * DOM elements.\n   *\n   * @param  {string} id - Context's id.\n   * @return {Sigma}\n   */\n  Sigma.prototype.createCanvasContext = function (id) {\n    var canvas = this.createCanvas(id);\n    var contextOptions = {\n      preserveDrawingBuffer: false,\n      antialias: false\n    };\n    this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n    return this;\n  };\n  /**\n   * Internal function used to create a canvas context and add the relevant\n   * DOM elements.\n   *\n   * @param  {string}  id      - Context's id.\n   * @param  {object?} options - #getContext params to override (optional)\n   * @return {Sigma}\n   */\n  Sigma.prototype.createWebGLContext = function (id, options) {\n    var canvas = this.createCanvas(id);\n    var contextOptions = __assign({\n      preserveDrawingBuffer: false,\n      antialias: false\n    }, options || {});\n    var context;\n    // First we try webgl2 for an easy performance boost\n    context = canvas.getContext(\"webgl2\", contextOptions);\n    // Else we fall back to webgl\n    if (!context) context = canvas.getContext(\"webgl\", contextOptions);\n    // Edge, I am looking right at you...\n    if (!context) context = canvas.getContext(\"experimental-webgl\", contextOptions);\n    this.webGLContexts[id] = context;\n    return this;\n  };\n  /**\n   * Method binding camera handlers.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.bindCameraHandlers = function () {\n    var _this = this;\n    this.activeListeners.camera = function () {\n      _this._scheduleRefresh();\n    };\n    this.camera.on(\"updated\", this.activeListeners.camera);\n    return this;\n  };\n  /**\n   * Method that checks whether or not a node collides with a given position.\n   */\n  Sigma.prototype.mouseIsOnNode = function (_a, _b, size) {\n    var x = _a.x,\n      y = _a.y;\n    var nodeX = _b.x,\n      nodeY = _b.y;\n    return x > nodeX - size && x < nodeX + size && y > nodeY - size && y < nodeY + size && Math.sqrt(Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2)) < size;\n  };\n  /**\n   * Method that returns all nodes in quad at a given position.\n   */\n  Sigma.prototype.getQuadNodes = function (position) {\n    var mouseGraphPosition = this.viewportToFramedGraph(position);\n    return this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);\n  };\n  /**\n   * Method that returns the closest node to a given position.\n   */\n  Sigma.prototype.getNodeAtPosition = function (position) {\n    var x = position.x,\n      y = position.y;\n    var quadNodes = this.getQuadNodes(position);\n    // We will hover the node whose center is closest to mouse\n    var minDistance = Infinity,\n      nodeAtPosition = null;\n    for (var i = 0, l = quadNodes.length; i < l; i++) {\n      var node = quadNodes[i];\n      var data = this.nodeDataCache[node];\n      var nodePosition = this.framedGraphToViewport(data);\n      var size = this.scaleSize(data.size);\n      if (!data.hidden && this.mouseIsOnNode(position, nodePosition, size)) {\n        var distance = Math.sqrt(Math.pow(x - nodePosition.x, 2) + Math.pow(y - nodePosition.y, 2));\n        // TODO: sort by min size also for cases where center is the same\n        if (distance < minDistance) {\n          minDistance = distance;\n          nodeAtPosition = node;\n        }\n      }\n    }\n    return nodeAtPosition;\n  };\n  /**\n   * Method binding event handlers.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.bindEventHandlers = function () {\n    var _this = this;\n    // Handling window resize\n    this.activeListeners.handleResize = function () {\n      _this.needToSoftProcess = true;\n      _this._scheduleRefresh();\n    };\n    window.addEventListener(\"resize\", this.activeListeners.handleResize);\n    // Handling mouse move\n    this.activeListeners.handleMove = function (e) {\n      var baseEvent = {\n        event: e,\n        preventSigmaDefault: function () {\n          e.preventSigmaDefault();\n        }\n      };\n      var nodeToHover = _this.getNodeAtPosition(e);\n      if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {\n        // Handling passing from one node to the other directly\n        if (_this.hoveredNode) _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), {\n          node: _this.hoveredNode\n        }));\n        _this.hoveredNode = nodeToHover;\n        _this.emit(\"enterNode\", __assign(__assign({}, baseEvent), {\n          node: nodeToHover\n        }));\n        _this.scheduleHighlightedNodesRender();\n        return;\n      }\n      // Checking if the hovered node is still hovered\n      if (_this.hoveredNode) {\n        var data = _this.nodeDataCache[_this.hoveredNode];\n        var pos = _this.framedGraphToViewport(data);\n        var size = _this.scaleSize(data.size);\n        if (!_this.mouseIsOnNode(e, pos, size)) {\n          var node = _this.hoveredNode;\n          _this.hoveredNode = null;\n          _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), {\n            node: node\n          }));\n          _this.scheduleHighlightedNodesRender();\n          return;\n        }\n      }\n      if (_this.settings.enableEdgeHoverEvents === true) {\n        _this.checkEdgeHoverEvents(baseEvent);\n      } else if (_this.settings.enableEdgeHoverEvents === \"debounce\") {\n        if (!_this.checkEdgesEventsFrame) _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function () {\n          _this.checkEdgeHoverEvents(baseEvent);\n          _this.checkEdgesEventsFrame = null;\n        });\n      }\n    };\n    // Handling click\n    var createMouseListener = function (eventType) {\n      return function (e) {\n        var baseEvent = {\n          event: e,\n          preventSigmaDefault: function () {\n            e.preventSigmaDefault();\n          }\n        };\n        var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;\n        var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;\n        if (nodeAtPosition) return _this.emit(\"\".concat(eventType, \"Node\"), __assign(__assign({}, baseEvent), {\n          node: nodeAtPosition\n        }));\n        if (eventType === \"wheel\" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {\n          var edge = _this.getEdgeAtPoint(e.x, e.y);\n          if (edge) return _this.emit(\"\".concat(eventType, \"Edge\"), __assign(__assign({}, baseEvent), {\n            edge: edge\n          }));\n        }\n        return _this.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\n      };\n    };\n    this.activeListeners.handleClick = createMouseListener(\"click\");\n    this.activeListeners.handleRightClick = createMouseListener(\"rightClick\");\n    this.activeListeners.handleDoubleClick = createMouseListener(\"doubleClick\");\n    this.activeListeners.handleWheel = createMouseListener(\"wheel\");\n    this.activeListeners.handleDown = createMouseListener(\"down\");\n    this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n    this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n    this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n    this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\n    this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\n    this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n    // TODO\n    // Deal with Touch captor events\n    return this;\n  };\n  /**\n   * Method binding graph handlers\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.bindGraphHandlers = function () {\n    var _this = this;\n    var graph = this.graph;\n    this.activeListeners.graphUpdate = function () {\n      _this.needToProcess = true;\n      _this._scheduleRefresh();\n    };\n    this.activeListeners.softGraphUpdate = function () {\n      _this.needToSoftProcess = true;\n      _this._scheduleRefresh();\n    };\n    this.activeListeners.dropNodeGraphUpdate = function (e) {\n      delete _this.nodeDataCache[e.key];\n      if (_this.hoveredNode === e.key) _this.hoveredNode = null;\n      _this.activeListeners.graphUpdate();\n    };\n    this.activeListeners.dropEdgeGraphUpdate = function (e) {\n      delete _this.edgeDataCache[e.key];\n      if (_this.hoveredEdge === e.key) _this.hoveredEdge = null;\n      _this.activeListeners.graphUpdate();\n    };\n    this.activeListeners.clearEdgesGraphUpdate = function () {\n      _this.edgeDataCache = {};\n      _this.hoveredEdge = null;\n      _this.activeListeners.graphUpdate();\n    };\n    this.activeListeners.clearGraphUpdate = function () {\n      _this.nodeDataCache = {};\n      _this.hoveredNode = null;\n      _this.activeListeners.clearEdgesGraphUpdate();\n    };\n    graph.on(\"nodeAdded\", this.activeListeners.graphUpdate);\n    graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n    graph.on(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n    graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n    graph.on(\"edgeAdded\", this.activeListeners.graphUpdate);\n    graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n    graph.on(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n    graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n    graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n    graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\n    return this;\n  };\n  /**\n   * Method used to unbind handlers from the graph.\n   *\n   * @return {undefined}\n   */\n  Sigma.prototype.unbindGraphHandlers = function () {\n    var graph = this.graph;\n    graph.removeListener(\"nodeAdded\", this.activeListeners.graphUpdate);\n    graph.removeListener(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n    graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n    graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n    graph.removeListener(\"edgeAdded\", this.activeListeners.graphUpdate);\n    graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n    graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n    graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n    graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n    graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\n  };\n  /**\n   * Method dealing with \"leaveEdge\" and \"enterEdge\" events.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.checkEdgeHoverEvents = function (payload) {\n    var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);\n    if (edgeToHover !== this.hoveredEdge) {\n      if (this.hoveredEdge) this.emit(\"leaveEdge\", __assign(__assign({}, payload), {\n        edge: this.hoveredEdge\n      }));\n      if (edgeToHover) this.emit(\"enterEdge\", __assign(__assign({}, payload), {\n        edge: edgeToHover\n      }));\n      this.hoveredEdge = edgeToHover;\n    }\n    return this;\n  };\n  /**\n   * Method looking for an edge colliding with a given point at (x, y). Returns\n   * the key of the edge if any, or null else.\n   */\n  Sigma.prototype.getEdgeAtPoint = function (x, y) {\n    var e_1, _a;\n    var _this = this;\n    var _b = this,\n      edgeDataCache = _b.edgeDataCache,\n      nodeDataCache = _b.nodeDataCache;\n    // Check first that pixel is colored:\n    // Note that mouse positions must be corrected by pixel ratio to correctly\n    // index the drawing buffer.\n    if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * this.pixelRatio, y * this.pixelRatio)) return null;\n    // Check for each edge if it collides with the point:\n    var _c = this.viewportToGraph({\n        x: x,\n        y: y\n      }),\n      graphX = _c.x,\n      graphY = _c.y;\n    // To translate edge thicknesses to the graph system, we observe by how much\n    // the length of a non-null edge is transformed to between the graph system\n    // and the viewport system:\n    var transformationRatio = 0;\n    this.graph.someEdge(function (key, _, sourceId, targetId, _a, _b) {\n      var xs = _a.x,\n        ys = _a.y;\n      var xt = _b.x,\n        yt = _b.y;\n      if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden) return false;\n      if (xs !== xt || ys !== yt) {\n        var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));\n        var _c = _this.graphToViewport({\n            x: xs,\n            y: ys\n          }),\n          vp_xs = _c.x,\n          vp_ys = _c.y;\n        var _d = _this.graphToViewport({\n            x: xt,\n            y: yt\n          }),\n          vp_xt = _d.x,\n          vp_yt = _d.y;\n        var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));\n        transformationRatio = graphLength / viewportLength;\n        return true;\n      }\n    });\n    // If no non-null edge has been found, return null:\n    if (!transformationRatio) return null;\n    // Now we can look for matching edges:\n    var edges = this.graph.filterEdges(function (key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) {\n      if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden) return false;\n      if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y,\n      // Adapt the edge size to the zoom ratio:\n      edgeDataCache[key].size * transformationRatio / _this.cameraSizeRatio)) {\n        return true;\n      }\n    });\n    if (edges.length === 0) return null; // no edges found\n    // if none of the edges have a zIndex, selected the most recently created one to match the rendering order\n    var selectedEdge = edges[edges.length - 1];\n    // otherwise select edge with highest zIndex\n    var highestZIndex = -Infinity;\n    try {\n      for (var edges_1 = __values(edges), edges_1_1 = edges_1.next(); !edges_1_1.done; edges_1_1 = edges_1.next()) {\n        var edge = edges_1_1.value;\n        var zIndex = this.graph.getEdgeAttribute(edge, \"zIndex\");\n        if (zIndex >= highestZIndex) {\n          selectedEdge = edge;\n          highestZIndex = zIndex;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (edges_1_1 && !edges_1_1.done && (_a = edges_1.return)) _a.call(edges_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return selectedEdge;\n  };\n  /**\n   * Method used to process the whole graph's data.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.process = function (keepArrays) {\n    var _this = this;\n    if (keepArrays === void 0) {\n      keepArrays = false;\n    }\n    var graph = this.graph;\n    var settings = this.settings;\n    var dimensions = this.getDimensions();\n    var nodeZExtent = [Infinity, -Infinity];\n    var edgeZExtent = [Infinity, -Infinity];\n    // Clearing the quad\n    this.quadtree.clear();\n    // Resetting the label grid\n    // TODO: it's probably better to do this explicitly or on resizes for layout and anims\n    this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\n    // Clear the highlightedNodes\n    this.highlightedNodes = new Set();\n    // Computing extents\n    this.nodeExtent = (0, utils_1.graphExtent)(graph);\n    // Resetting `forceLabel` indices\n    this.nodesWithForcedLabels = [];\n    this.edgesWithForcedLabels = [];\n    // NOTE: it is important to compute this matrix after computing the node's extent\n    // because #.getGraphDimensions relies on it\n    var nullCamera = new camera_1.default();\n    var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting(\"stagePadding\") || 0);\n    // Rescaling function\n    this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);\n    var nodesPerPrograms = {};\n    var nodes = graph.nodes();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      // Node display data resolution:\n      //   1. First we get the node's attributes\n      //   2. We optionally reduce them using the function provided by the user\n      //      Note that this function must return a total object and won't be merged\n      //   3. We apply our defaults, while running some vital checks\n      //   4. We apply the normalization function\n      // We shallow copy node data to avoid dangerous behaviors from reducers\n      var attr = Object.assign({}, graph.getNodeAttributes(node));\n      if (settings.nodeReducer) attr = settings.nodeReducer(node, attr);\n      var data = applyNodeDefaults(this.settings, node, attr);\n      nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\n      this.nodeDataCache[node] = data;\n      this.normalizationFunction.applyTo(data);\n      if (data.forceLabel) this.nodesWithForcedLabels.push(node);\n      if (this.settings.zIndex) {\n        if (data.zIndex < nodeZExtent[0]) nodeZExtent[0] = data.zIndex;\n        if (data.zIndex > nodeZExtent[1]) nodeZExtent[1] = data.zIndex;\n      }\n    }\n    for (var type in this.nodePrograms) {\n      if (!this.nodePrograms.hasOwnProperty(type)) {\n        throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\n      }\n      if (!keepArrays) this.nodePrograms[type].allocate(nodesPerPrograms[type] || 0);\n      // We reset that count here, so that we can reuse it while calling the Program#process methods:\n      nodesPerPrograms[type] = 0;\n    }\n    // Handling node z-index\n    // TODO: z-index needs us to compute display data before hand\n    if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1]) nodes = (0, utils_1.zIndexOrdering)(nodeZExtent, function (node) {\n      return _this.nodeDataCache[node].zIndex;\n    }, nodes);\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      var data = this.nodeDataCache[node];\n      this.quadtree.add(node, data.x, 1 - data.y, data.size / this.width);\n      if (typeof data.label === \"string\" && !data.hidden) this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, {\n        matrix: nullCameraMatrix\n      }));\n      var nodeProgram = this.nodePrograms[data.type];\n      if (!nodeProgram) throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(data.type, \"\\\"!\"));\n      nodeProgram.process(data, data.hidden, nodesPerPrograms[data.type]++);\n      // Save the node in the highlighted set if needed\n      if (data.highlighted && !data.hidden) this.highlightedNodes.add(node);\n    }\n    this.labelGrid.organize();\n    var edgesPerPrograms = {};\n    var edges = graph.edges();\n    for (var i = 0, l = edges.length; i < l; i++) {\n      var edge = edges[i];\n      // Edge display data resolution:\n      //   1. First we get the edge's attributes\n      //   2. We optionally reduce them using the function provided by the user\n      //      Note that this function must return a total object and won't be merged\n      //   3. We apply our defaults, while running some vital checks\n      // We shallow copy edge data to avoid dangerous behaviors from reducers\n      var attr = Object.assign({}, graph.getEdgeAttributes(edge));\n      if (settings.edgeReducer) attr = settings.edgeReducer(edge, attr);\n      var data = applyEdgeDefaults(this.settings, edge, attr);\n      edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;\n      this.edgeDataCache[edge] = data;\n      if (data.forceLabel && !data.hidden) this.edgesWithForcedLabels.push(edge);\n      if (this.settings.zIndex) {\n        if (data.zIndex < edgeZExtent[0]) edgeZExtent[0] = data.zIndex;\n        if (data.zIndex > edgeZExtent[1]) edgeZExtent[1] = data.zIndex;\n      }\n    }\n    for (var type in this.edgePrograms) {\n      if (!this.edgePrograms.hasOwnProperty(type)) {\n        throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(type, \"\\\"!\"));\n      }\n      if (!keepArrays) this.edgePrograms[type].allocate(edgesPerPrograms[type] || 0);\n      // We reset that count here, so that we can reuse it while calling the Program#process methods:\n      edgesPerPrograms[type] = 0;\n    }\n    // Handling edge z-index\n    if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1]) edges = (0, utils_1.zIndexOrdering)(edgeZExtent, function (edge) {\n      return _this.edgeDataCache[edge].zIndex;\n    }, edges);\n    for (var i = 0, l = edges.length; i < l; i++) {\n      var edge = edges[i];\n      var data = this.edgeDataCache[edge];\n      var extremities = graph.extremities(edge),\n        sourceData = this.nodeDataCache[extremities[0]],\n        targetData = this.nodeDataCache[extremities[1]];\n      var hidden = data.hidden || sourceData.hidden || targetData.hidden;\n      this.edgePrograms[data.type].process(sourceData, targetData, data, hidden, edgesPerPrograms[data.type]++);\n    }\n    for (var type in this.edgePrograms) {\n      var program = this.edgePrograms[type];\n      if (!keepArrays && typeof program.computeIndices === \"function\") program.computeIndices();\n    }\n    return this;\n  };\n  /**\n   * Method that backports potential settings updates where it's needed.\n   * @private\n   */\n  Sigma.prototype.handleSettingsUpdate = function () {\n    this.camera.minRatio = this.settings.minCameraRatio;\n    this.camera.maxRatio = this.settings.maxCameraRatio;\n    this.camera.setState(this.camera.validateState(this.camera.getState()));\n    return this;\n  };\n  /**\n   * Method that decides whether to reprocess graph or not, and then render the\n   * graph.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype._refresh = function () {\n    // Do we need to process data?\n    if (this.needToProcess) {\n      this.process();\n    } else if (this.needToSoftProcess) {\n      this.process(true);\n    }\n    // Resetting state\n    this.needToProcess = false;\n    this.needToSoftProcess = false;\n    // Rendering\n    this.render();\n    return this;\n  };\n  /**\n   * Method that schedules a `_refresh` call if none has been scheduled yet. It\n   * will then be processed next available frame.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype._scheduleRefresh = function () {\n    var _this = this;\n    if (!this.renderFrame) {\n      this.renderFrame = (0, utils_1.requestFrame)(function () {\n        _this._refresh();\n        _this.renderFrame = null;\n      });\n    }\n    return this;\n  };\n  /**\n   * Method used to render labels.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.renderLabels = function () {\n    if (!this.settings.renderLabels) return this;\n    var cameraState = this.camera.getState();\n    // Selecting labels to draw\n    var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);\n    (0, extend_1.default)(labelsToDisplay, this.nodesWithForcedLabels);\n    this.displayedLabels = new Set();\n    // Drawing labels\n    var context = this.canvasContexts.labels;\n    for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n      var node = labelsToDisplay[i];\n      var data = this.nodeDataCache[node];\n      // If the node was already drawn (like if it is eligible AND has\n      // `forceLabel`), we don't want to draw it again\n      // NOTE: we can do better probably\n      if (this.displayedLabels.has(node)) continue;\n      // If the node is hidden, we don't need to display its label obviously\n      if (data.hidden) continue;\n      var _a = this.framedGraphToViewport(data),\n        x = _a.x,\n        y = _a.y;\n      // NOTE: we can cache the labels we need to render until the camera's ratio changes\n      var size = this.scaleSize(data.size);\n      // Is node big enough?\n      if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold) continue;\n      // Is node actually on screen (with some margin)\n      // NOTE: we used to rely on the quadtree for this, but the coordinates\n      // conversion make it unreliable and at that point we already converted\n      // to viewport coordinates and since the label grid already culls the\n      // number of potential labels to display this looks like a good\n      // performance compromise.\n      // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not\n      // considering cells obviously outside of the range of the current\n      // view rectangle.\n      if (x < -X_LABEL_MARGIN || x > this.width + X_LABEL_MARGIN || y < -Y_LABEL_MARGIN || y > this.height + Y_LABEL_MARGIN) continue;\n      // Because displayed edge labels depend directly on actually rendered node\n      // labels, we need to only add to this.displayedLabels nodes whose label\n      // is rendered.\n      // This makes this.displayedLabels depend on viewport, which might become\n      // an issue once we start memoizing getLabelsToDisplay.\n      this.displayedLabels.add(node);\n      this.settings.labelRenderer(context, __assign(__assign({\n        key: node\n      }, data), {\n        size: size,\n        x: x,\n        y: y\n      }), this.settings);\n    }\n    return this;\n  };\n  /**\n   * Method used to render edge labels, based on which node labels were\n   * rendered.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.renderEdgeLabels = function () {\n    if (!this.settings.renderEdgeLabels) return this;\n    var context = this.canvasContexts.edgeLabels;\n    // Clearing\n    context.clearRect(0, 0, this.width, this.height);\n    var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({\n      graph: this.graph,\n      hoveredNode: this.hoveredNode,\n      displayedNodeLabels: this.displayedLabels,\n      highlightedNodes: this.highlightedNodes\n    }).concat(this.edgesWithForcedLabels);\n    var displayedLabels = new Set();\n    for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n      var edge = edgeLabelsToDisplay[i],\n        extremities = this.graph.extremities(edge),\n        sourceData = this.nodeDataCache[extremities[0]],\n        targetData = this.nodeDataCache[extremities[1]],\n        edgeData = this.edgeDataCache[edge];\n      // If the edge was already drawn (like if it is eligible AND has\n      // `forceLabel`), we don't want to draw it again\n      if (displayedLabels.has(edge)) continue;\n      // If the edge is hidden we don't need to display its label\n      // NOTE: the test on sourceData & targetData is probably paranoid at this point?\n      if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\n        continue;\n      }\n      this.settings.edgeLabelRenderer(context, __assign(__assign({\n        key: edge\n      }, edgeData), {\n        size: this.scaleSize(edgeData.size)\n      }), __assign(__assign(__assign({\n        key: extremities[0]\n      }, sourceData), this.framedGraphToViewport(sourceData)), {\n        size: this.scaleSize(sourceData.size)\n      }), __assign(__assign(__assign({\n        key: extremities[1]\n      }, targetData), this.framedGraphToViewport(targetData)), {\n        size: this.scaleSize(targetData.size)\n      }), this.settings);\n      displayedLabels.add(edge);\n    }\n    return this;\n  };\n  /**\n   * Method used to render the highlighted nodes.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.renderHighlightedNodes = function () {\n    var _this = this;\n    var context = this.canvasContexts.hovers;\n    // Clearing\n    context.clearRect(0, 0, this.width, this.height);\n    // Rendering\n    var render = function (node) {\n      var data = _this.nodeDataCache[node];\n      var _a = _this.framedGraphToViewport(data),\n        x = _a.x,\n        y = _a.y;\n      var size = _this.scaleSize(data.size);\n      _this.settings.hoverRenderer(context, __assign(__assign({\n        key: node\n      }, data), {\n        size: size,\n        x: x,\n        y: y\n      }), _this.settings);\n    };\n    var nodesToRender = [];\n    if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\n      nodesToRender.push(this.hoveredNode);\n    }\n    this.highlightedNodes.forEach(function (node) {\n      // The hovered node has already been highlighted\n      if (node !== _this.hoveredNode) nodesToRender.push(node);\n    });\n    // Draw labels:\n    nodesToRender.forEach(function (node) {\n      return render(node);\n    });\n    // Draw WebGL nodes on top of the labels:\n    var nodesPerPrograms = {};\n    // 1. Count nodes per type:\n    nodesToRender.forEach(function (node) {\n      var type = _this.nodeDataCache[node].type;\n      nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\n    });\n    // 2. Allocate for each type for the proper number of nodes\n    for (var type in this.nodeHoverPrograms) {\n      this.nodeHoverPrograms[type].allocate(nodesPerPrograms[type] || 0);\n      // Also reset count, to use when rendering:\n      nodesPerPrograms[type] = 0;\n    }\n    // 3. Process all nodes to render:\n    nodesToRender.forEach(function (node) {\n      var data = _this.nodeDataCache[node];\n      _this.nodeHoverPrograms[data.type].process(data, data.hidden, nodesPerPrograms[data.type]++);\n    });\n    // 4. Clear hovered nodes layer:\n    this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n    // 5. Render:\n    for (var type in this.nodeHoverPrograms) {\n      var program = this.nodeHoverPrograms[type];\n      program.bind();\n      program.bufferData();\n      program.render({\n        matrix: this.matrix,\n        width: this.width,\n        height: this.height,\n        ratio: this.camera.ratio,\n        correctionRatio: this.correctionRatio / this.camera.ratio,\n        scalingRatio: this.pixelRatio\n      });\n    }\n  };\n  /**\n   * Method used to schedule a hover render.\n   *\n   */\n  Sigma.prototype.scheduleHighlightedNodesRender = function () {\n    var _this = this;\n    if (this.renderHighlightedNodesFrame || this.renderFrame) return;\n    this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {\n      // Resetting state\n      _this.renderHighlightedNodesFrame = null;\n      // Rendering\n      _this.renderHighlightedNodes();\n      _this.renderEdgeLabels();\n    });\n  };\n  /**\n   * Method used to render.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.render = function () {\n    var _this = this;\n    this.emit(\"beforeRender\");\n    var exitRender = function () {\n      _this.emit(\"afterRender\");\n      return _this;\n    };\n    // If a render was scheduled, we cancel it\n    if (this.renderFrame) {\n      (0, utils_1.cancelFrame)(this.renderFrame);\n      this.renderFrame = null;\n      this.needToProcess = false;\n      this.needToSoftProcess = false;\n    }\n    // First we need to resize\n    this.resize();\n    // Clearing the canvases\n    this.clear();\n    // Recomputing useful camera-related values:\n    this.updateCachedValues();\n    // If we have no nodes we can stop right there\n    if (!this.graph.order) return exitRender();\n    // TODO: improve this heuristic or move to the captor itself?\n    // TODO: deal with the touch captor here as well\n    var mouseCaptor = this.mouseCaptor;\n    var moving = this.camera.isAnimated() || mouseCaptor.isMoving || mouseCaptor.draggedEvents || mouseCaptor.currentWheelDirection;\n    // Then we need to extract a matrix from the camera\n    var cameraState = this.camera.getState();\n    var viewportDimensions = this.getDimensions();\n    var graphDimensions = this.getGraphDimensions();\n    var padding = this.getSetting(\"stagePadding\") || 0;\n    this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);\n    this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);\n    this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);\n    // Drawing nodes\n    for (var type in this.nodePrograms) {\n      var program = this.nodePrograms[type];\n      program.bind();\n      program.bufferData();\n      program.render({\n        matrix: this.matrix,\n        width: this.width,\n        height: this.height,\n        ratio: cameraState.ratio,\n        correctionRatio: this.correctionRatio / cameraState.ratio,\n        scalingRatio: this.pixelRatio\n      });\n    }\n    // Drawing edges\n    if (!this.settings.hideEdgesOnMove || !moving) {\n      for (var type in this.edgePrograms) {\n        var program = this.edgePrograms[type];\n        program.bind();\n        program.bufferData();\n        program.render({\n          matrix: this.matrix,\n          width: this.width,\n          height: this.height,\n          ratio: cameraState.ratio,\n          correctionRatio: this.correctionRatio / cameraState.ratio,\n          scalingRatio: this.pixelRatio\n        });\n      }\n    }\n    // Do not display labels on move per setting\n    if (this.settings.hideLabelsOnMove && moving) return exitRender();\n    this.renderLabels();\n    this.renderEdgeLabels();\n    this.renderHighlightedNodes();\n    return exitRender();\n  };\n  /**\n   * Internal method used to update expensive and therefore cached values\n   * each time the camera state is updated.\n   */\n  Sigma.prototype.updateCachedValues = function () {\n    var ratio = this.camera.getState().ratio;\n    this.cameraSizeRatio = Math.sqrt(ratio);\n  };\n  /**---------------------------------------------------------------------------\n   * Public API.\n   **---------------------------------------------------------------------------\n   */\n  /**\n   * Method returning the renderer's camera.\n   *\n   * @return {Camera}\n   */\n  Sigma.prototype.getCamera = function () {\n    return this.camera;\n  };\n  /**\n   * Method returning the container DOM element.\n   *\n   * @return {HTMLElement}\n   */\n  Sigma.prototype.getContainer = function () {\n    return this.container;\n  };\n  /**\n   * Method returning the renderer's graph.\n   *\n   * @return {Graph}\n   */\n  Sigma.prototype.getGraph = function () {\n    return this.graph;\n  };\n  /**\n   * Method used to set the renderer's graph.\n   *\n   * @return {Graph}\n   */\n  Sigma.prototype.setGraph = function (graph) {\n    if (graph === this.graph) return;\n    // Unbinding handlers on the current graph\n    this.unbindGraphHandlers();\n    // Clearing the graph data caches\n    this.nodeDataCache = {};\n    this.edgeDataCache = {};\n    // Cleaning renderer state tied to the current graph\n    this.displayedLabels.clear();\n    this.highlightedNodes.clear();\n    this.hoveredNode = null;\n    this.hoveredEdge = null;\n    this.nodesWithForcedLabels.length = 0;\n    this.edgesWithForcedLabels.length = 0;\n    if (this.checkEdgesEventsFrame !== null) {\n      (0, utils_1.cancelFrame)(this.checkEdgesEventsFrame);\n      this.checkEdgesEventsFrame = null;\n    }\n    // Installing new graph\n    this.graph = graph;\n    // Binding new handlers\n    this.bindGraphHandlers();\n    // Re-rendering now to avoid discrepancies from now to next frame\n    this.process();\n    this.render();\n  };\n  /**\n   * Method returning the mouse captor.\n   *\n   * @return {MouseCaptor}\n   */\n  Sigma.prototype.getMouseCaptor = function () {\n    return this.mouseCaptor;\n  };\n  /**\n   * Method returning the touch captor.\n   *\n   * @return {TouchCaptor}\n   */\n  Sigma.prototype.getTouchCaptor = function () {\n    return this.touchCaptor;\n  };\n  /**\n   * Method returning the current renderer's dimensions.\n   *\n   * @return {Dimensions}\n   */\n  Sigma.prototype.getDimensions = function () {\n    return {\n      width: this.width,\n      height: this.height\n    };\n  };\n  /**\n   * Method returning the current graph's dimensions.\n   *\n   * @return {Dimensions}\n   */\n  Sigma.prototype.getGraphDimensions = function () {\n    var extent = this.customBBox || this.nodeExtent;\n    return {\n      width: extent.x[1] - extent.x[0] || 1,\n      height: extent.y[1] - extent.y[0] || 1\n    };\n  };\n  /**\n   * Method used to get all the sigma node attributes.\n   * It's usefull for example to get the position of a node\n   * and to get values that are set by the nodeReducer\n   *\n   * @param  {string} key - The node's key.\n   * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\n   */\n  Sigma.prototype.getNodeDisplayData = function (key) {\n    var node = this.nodeDataCache[key];\n    return node ? Object.assign({}, node) : undefined;\n  };\n  /**\n   * Method used to get all the sigma edge attributes.\n   * It's usefull for example to get values that are set by the edgeReducer.\n   *\n   * @param  {string} key - The edge's key.\n   * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\n   */\n  Sigma.prototype.getEdgeDisplayData = function (key) {\n    var edge = this.edgeDataCache[key];\n    return edge ? Object.assign({}, edge) : undefined;\n  };\n  /**\n   * Method returning a copy of the settings collection.\n   *\n   * @return {Settings} A copy of the settings collection.\n   */\n  Sigma.prototype.getSettings = function () {\n    return __assign({}, this.settings);\n  };\n  /**\n   * Method returning the current value for a given setting key.\n   *\n   * @param  {string} key - The setting key to get.\n   * @return {any} The value attached to this setting key or undefined if not found\n   */\n  Sigma.prototype.getSetting = function (key) {\n    return this.settings[key];\n  };\n  /**\n   * Method setting the value of a given setting key. Note that this will schedule\n   * a new render next frame.\n   *\n   * @param  {string} key - The setting key to set.\n   * @param  {any}    value - The value to set.\n   * @return {Sigma}\n   */\n  Sigma.prototype.setSetting = function (key, value) {\n    this.settings[key] = value;\n    (0, settings_1.validateSettings)(this.settings);\n    this.handleSettingsUpdate();\n    this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n    this._scheduleRefresh();\n    return this;\n  };\n  /**\n   * Method updating the value of a given setting key using the provided function.\n   * Note that this will schedule a new render next frame.\n   *\n   * @param  {string}   key     - The setting key to set.\n   * @param  {function} updater - The update function.\n   * @return {Sigma}\n   */\n  Sigma.prototype.updateSetting = function (key, updater) {\n    this.settings[key] = updater(this.settings[key]);\n    (0, settings_1.validateSettings)(this.settings);\n    this.handleSettingsUpdate();\n    this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n    this._scheduleRefresh();\n    return this;\n  };\n  /**\n   * Method used to resize the renderer.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.resize = function () {\n    var previousWidth = this.width,\n      previousHeight = this.height;\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.pixelRatio = (0, utils_1.getPixelRatio)();\n    if (this.width === 0) {\n      if (this.settings.allowInvalidContainer) this.width = 1;else throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n    }\n    if (this.height === 0) {\n      if (this.settings.allowInvalidContainer) this.height = 1;else throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n    }\n    // If nothing has changed, we can stop right here\n    if (previousWidth === this.width && previousHeight === this.height) return this;\n    this.emit(\"resize\");\n    // Sizing dom elements\n    for (var id in this.elements) {\n      var element = this.elements[id];\n      element.style.width = this.width + \"px\";\n      element.style.height = this.height + \"px\";\n    }\n    // Sizing canvas contexts\n    for (var id in this.canvasContexts) {\n      this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n      this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n      if (this.pixelRatio !== 1) this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);\n    }\n    // Sizing WebGL contexts\n    for (var id in this.webGLContexts) {\n      this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n      this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n      this.webGLContexts[id].viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\n    }\n    return this;\n  };\n  /**\n   * Method used to clear all the canvases.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.clear = function () {\n    this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\n    this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\n    this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n    this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n    this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n    this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n    return this;\n  };\n  /**\n   * Method used to refresh all computed data.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.refresh = function () {\n    this.needToProcess = true;\n    this._refresh();\n    return this;\n  };\n  /**\n   * Method used to refresh all computed data, at the next available frame.\n   * If this method has already been called this frame, then it will only render once at the next available frame.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.scheduleRefresh = function () {\n    this.needToProcess = true;\n    this._scheduleRefresh();\n    return this;\n  };\n  /**\n   * Method used to (un)zoom, while preserving the position of a viewport point.\n   * Used for instance to zoom \"on the mouse cursor\".\n   *\n   * @param viewportTarget\n   * @param newRatio\n   * @return {CameraState}\n   */\n  Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {\n    var _a = this.camera.getState(),\n      ratio = _a.ratio,\n      angle = _a.angle,\n      x = _a.x,\n      y = _a.y;\n    // TODO: handle max zoom\n    var ratioDiff = newRatio / ratio;\n    var center = {\n      x: this.width / 2,\n      y: this.height / 2\n    };\n    var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\n    var graphCenterPosition = this.viewportToFramedGraph(center);\n    return {\n      angle: angle,\n      x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\n      y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\n      ratio: newRatio\n    };\n  };\n  /**\n   * Method returning the abstract rectangle containing the graph according\n   * to the camera's state.\n   *\n   * @return {object} - The view's rectangle.\n   */\n  Sigma.prototype.viewRectangle = function () {\n    // TODO: reduce relative margin?\n    var marginX = 0 * this.width / 8,\n      marginY = 0 * this.height / 8;\n    var p1 = this.viewportToFramedGraph({\n        x: 0 - marginX,\n        y: 0 - marginY\n      }),\n      p2 = this.viewportToFramedGraph({\n        x: this.width + marginX,\n        y: 0 - marginY\n      }),\n      h = this.viewportToFramedGraph({\n        x: 0,\n        y: this.height + marginY\n      });\n    return {\n      x1: p1.x,\n      y1: p1.y,\n      x2: p2.x,\n      y2: p2.y,\n      height: p2.y - h.y\n    };\n  };\n  /**\n   * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\n   * overriding anything that is used to get the translation matrix, or even the matrix itself.\n   *\n   * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n   * of computations.\n   */\n  Sigma.prototype.framedGraphToViewport = function (coordinates, override) {\n    if (override === void 0) {\n      override = {};\n    }\n    var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\n    var matrix = override.matrix ? override.matrix : recomputeMatrix ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0) : this.matrix;\n    var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);\n    return {\n      x: (1 + viewportPos.x) * this.width / 2,\n      y: (1 - viewportPos.y) * this.height / 2\n    };\n  };\n  /**\n   * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\n   * overriding anything that is used to get the translation matrix, or even the matrix itself.\n   *\n   * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n   * of computations.\n   */\n  Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {\n    if (override === void 0) {\n      override = {};\n    }\n    var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\n    var invMatrix = override.matrix ? override.matrix : recomputeMatrix ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0, true) : this.invMatrix;\n    var res = (0, matrices_1.multiplyVec2)(invMatrix, {\n      x: coordinates.x / this.width * 2 - 1,\n      y: 1 - coordinates.y / this.height * 2\n    });\n    if (isNaN(res.x)) res.x = 0;\n    if (isNaN(res.y)) res.y = 0;\n    return res;\n  };\n  /**\n   * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n   * stage) to the graph system (the reference system of data as they are in the given graph instance).\n   *\n   * This method accepts an optional camera which can be useful if you need to translate coordinates\n   * based on a different view than the one being currently being displayed on screen.\n   *\n   * @param {Coordinates}                  viewportPoint\n   * @param {CoordinateConversionOverride} override\n   */\n  Sigma.prototype.viewportToGraph = function (viewportPoint, override) {\n    if (override === void 0) {\n      override = {};\n    }\n    return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\n  };\n  /**\n   * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n   * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n   *\n   * This method accepts an optional camera which can be useful if you need to translate coordinates\n   * based on a different view than the one being currently being displayed on screen.\n   *\n   * @param {Coordinates}                  graphPoint\n   * @param {CoordinateConversionOverride} override\n   */\n  Sigma.prototype.graphToViewport = function (graphPoint, override) {\n    if (override === void 0) {\n      override = {};\n    }\n    return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\n  };\n  /**\n   * Method returning the graph's bounding box.\n   *\n   * @return {{ x: Extent, y: Extent }}\n   */\n  Sigma.prototype.getBBox = function () {\n    return (0, utils_1.graphExtent)(this.graph);\n  };\n  /**\n   * Method returning the graph's custom bounding box, if any.\n   *\n   * @return {{ x: Extent, y: Extent } | null}\n   */\n  Sigma.prototype.getCustomBBox = function () {\n    return this.customBBox;\n  };\n  /**\n   * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\n   *\n   * @return {Sigma}\n   */\n  Sigma.prototype.setCustomBBox = function (customBBox) {\n    this.customBBox = customBBox;\n    this._scheduleRefresh();\n    return this;\n  };\n  /**\n   * Method used to shut the container & release event listeners.\n   *\n   * @return {undefined}\n   */\n  Sigma.prototype.kill = function () {\n    // Emitting \"kill\" events so that plugins and such can cleanup\n    this.emit(\"kill\");\n    // Releasing events\n    this.removeAllListeners();\n    // Releasing camera handlers\n    this.camera.removeListener(\"updated\", this.activeListeners.camera);\n    // Releasing DOM events & captors\n    window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n    this.mouseCaptor.kill();\n    this.touchCaptor.kill();\n    // Releasing graph handlers\n    this.unbindGraphHandlers();\n    // Releasing cache & state\n    this.quadtree = new quadtree_1.default();\n    this.nodeDataCache = {};\n    this.edgeDataCache = {};\n    this.nodesWithForcedLabels = [];\n    this.edgesWithForcedLabels = [];\n    this.highlightedNodes.clear();\n    // Clearing frames\n    if (this.renderFrame) {\n      (0, utils_1.cancelFrame)(this.renderFrame);\n      this.renderFrame = null;\n    }\n    if (this.renderHighlightedNodesFrame) {\n      (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);\n      this.renderHighlightedNodesFrame = null;\n    }\n    // Destroying canvases\n    var container = this.container;\n    while (container.firstChild) container.removeChild(container.firstChild);\n  };\n  /**\n   * Method used to scale the given size according to the camera's ratio, i.e.\n   * zooming state.\n   *\n   * @param  {number} size - The size to scale (node size, edge thickness etc.).\n   * @return {number}      - The scaled size.\n   */\n  Sigma.prototype.scaleSize = function (size) {\n    return size / this.cameraSizeRatio;\n  };\n  /**\n   * Method that returns the collection of all used canvases.\n   * At the moment, the instantiated canvases are the following, and in the\n   * following order in the DOM:\n   * - `edges`\n   * - `nodes`\n   * - `edgeLabels`\n   * - `labels`\n   * - `hovers`\n   * - `hoverNodes`\n   * - `mouse`\n   *\n   * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\n   */\n  Sigma.prototype.getCanvases = function () {\n    return __assign({}, this.elements);\n  };\n  return Sigma;\n}(types_1.TypedEventEmitter);\nexports.default = Sigma;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypedEventEmitter = void 0;\n/**\n * Sigma.js Types\n * ===============\n *\n * Various type declarations used throughout the library.\n * @module\n */\nvar events_1 = require(\"events\");\nvar TypedEventEmitter = /** @class */function (_super) {\n  __extends(TypedEventEmitter, _super);\n  function TypedEventEmitter() {\n    var _this = _super.call(this) || this;\n    _this.rawEmitter = _this;\n    return _this;\n  }\n  return TypedEventEmitter;\n}(events_1.EventEmitter);\nexports.TypedEventEmitter = TypedEventEmitter;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;\nvar index_1 = require(\"./index\");\nvar easings_1 = __importDefault(require(\"./easings\"));\nexports.ANIMATE_DEFAULTS = {\n  easing: \"quadraticInOut\",\n  duration: 150\n};\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n  var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);\n  var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n  var start = Date.now();\n  var startPositions = {};\n  for (var node in targets) {\n    var attrs = targets[node];\n    startPositions[node] = {};\n    for (var k in attrs) startPositions[node][k] = graph.getNodeAttribute(node, k);\n  }\n  var frame = null;\n  var step = function () {\n    frame = null;\n    var p = (Date.now() - start) / options.duration;\n    if (p >= 1) {\n      // Animation is done\n      for (var node in targets) {\n        var attrs = targets[node];\n        // We use given values to avoid precision issues and for convenience\n        for (var k in attrs) graph.setNodeAttribute(node, k, attrs[k]);\n      }\n      if (typeof callback === \"function\") callback();\n      return;\n    }\n    p = easing(p);\n    for (var node in targets) {\n      var attrs = targets[node];\n      var s = startPositions[node];\n      for (var k in attrs) graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));\n    }\n    frame = (0, index_1.requestFrame)(step);\n  };\n  step();\n  return function () {\n    if (frame) (0, index_1.cancelFrame)(frame);\n  };\n}\nexports.animateNodes = animateNodes;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTML_COLORS = void 0;\nexports.HTML_COLORS = {\n  black: \"#000000\",\n  silver: \"#C0C0C0\",\n  gray: \"#808080\",\n  grey: \"#808080\",\n  white: \"#FFFFFF\",\n  maroon: \"#800000\",\n  red: \"#FF0000\",\n  purple: \"#800080\",\n  fuchsia: \"#FF00FF\",\n  green: \"#008000\",\n  lime: \"#00FF00\",\n  olive: \"#808000\",\n  yellow: \"#FFFF00\",\n  navy: \"#000080\",\n  blue: \"#0000FF\",\n  teal: \"#008080\",\n  aqua: \"#00FFFF\",\n  darkblue: \"#00008B\",\n  mediumblue: \"#0000CD\",\n  darkgreen: \"#006400\",\n  darkcyan: \"#008B8B\",\n  deepskyblue: \"#00BFFF\",\n  darkturquoise: \"#00CED1\",\n  mediumspringgreen: \"#00FA9A\",\n  springgreen: \"#00FF7F\",\n  cyan: \"#00FFFF\",\n  midnightblue: \"#191970\",\n  dodgerblue: \"#1E90FF\",\n  lightseagreen: \"#20B2AA\",\n  forestgreen: \"#228B22\",\n  seagreen: \"#2E8B57\",\n  darkslategray: \"#2F4F4F\",\n  darkslategrey: \"#2F4F4F\",\n  limegreen: \"#32CD32\",\n  mediumseagreen: \"#3CB371\",\n  turquoise: \"#40E0D0\",\n  royalblue: \"#4169E1\",\n  steelblue: \"#4682B4\",\n  darkslateblue: \"#483D8B\",\n  mediumturquoise: \"#48D1CC\",\n  indigo: \"#4B0082\",\n  darkolivegreen: \"#556B2F\",\n  cadetblue: \"#5F9EA0\",\n  cornflowerblue: \"#6495ED\",\n  rebeccapurple: \"#663399\",\n  mediumaquamarine: \"#66CDAA\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  slateblue: \"#6A5ACD\",\n  olivedrab: \"#6B8E23\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  mediumslateblue: \"#7B68EE\",\n  lawngreen: \"#7CFC00\",\n  chartreuse: \"#7FFF00\",\n  aquamarine: \"#7FFFD4\",\n  skyblue: \"#87CEEB\",\n  lightskyblue: \"#87CEFA\",\n  blueviolet: \"#8A2BE2\",\n  darkred: \"#8B0000\",\n  darkmagenta: \"#8B008B\",\n  saddlebrown: \"#8B4513\",\n  darkseagreen: \"#8FBC8F\",\n  lightgreen: \"#90EE90\",\n  mediumpurple: \"#9370DB\",\n  darkviolet: \"#9400D3\",\n  palegreen: \"#98FB98\",\n  darkorchid: \"#9932CC\",\n  yellowgreen: \"#9ACD32\",\n  sienna: \"#A0522D\",\n  brown: \"#A52A2A\",\n  darkgray: \"#A9A9A9\",\n  darkgrey: \"#A9A9A9\",\n  lightblue: \"#ADD8E6\",\n  greenyellow: \"#ADFF2F\",\n  paleturquoise: \"#AFEEEE\",\n  lightsteelblue: \"#B0C4DE\",\n  powderblue: \"#B0E0E6\",\n  firebrick: \"#B22222\",\n  darkgoldenrod: \"#B8860B\",\n  mediumorchid: \"#BA55D3\",\n  rosybrown: \"#BC8F8F\",\n  darkkhaki: \"#BDB76B\",\n  mediumvioletred: \"#C71585\",\n  indianred: \"#CD5C5C\",\n  peru: \"#CD853F\",\n  chocolate: \"#D2691E\",\n  tan: \"#D2B48C\",\n  lightgray: \"#D3D3D3\",\n  lightgrey: \"#D3D3D3\",\n  thistle: \"#D8BFD8\",\n  orchid: \"#DA70D6\",\n  goldenrod: \"#DAA520\",\n  palevioletred: \"#DB7093\",\n  crimson: \"#DC143C\",\n  gainsboro: \"#DCDCDC\",\n  plum: \"#DDA0DD\",\n  burlywood: \"#DEB887\",\n  lightcyan: \"#E0FFFF\",\n  lavender: \"#E6E6FA\",\n  darksalmon: \"#E9967A\",\n  violet: \"#EE82EE\",\n  palegoldenrod: \"#EEE8AA\",\n  lightcoral: \"#F08080\",\n  khaki: \"#F0E68C\",\n  aliceblue: \"#F0F8FF\",\n  honeydew: \"#F0FFF0\",\n  azure: \"#F0FFFF\",\n  sandybrown: \"#F4A460\",\n  wheat: \"#F5DEB3\",\n  beige: \"#F5F5DC\",\n  whitesmoke: \"#F5F5F5\",\n  mintcream: \"#F5FFFA\",\n  ghostwhite: \"#F8F8FF\",\n  salmon: \"#FA8072\",\n  antiquewhite: \"#FAEBD7\",\n  linen: \"#FAF0E6\",\n  lightgoldenrodyellow: \"#FAFAD2\",\n  oldlace: \"#FDF5E6\",\n  magenta: \"#FF00FF\",\n  deeppink: \"#FF1493\",\n  orangered: \"#FF4500\",\n  tomato: \"#FF6347\",\n  hotpink: \"#FF69B4\",\n  coral: \"#FF7F50\",\n  darkorange: \"#FF8C00\",\n  lightsalmon: \"#FFA07A\",\n  orange: \"#FFA500\",\n  lightpink: \"#FFB6C1\",\n  pink: \"#FFC0CB\",\n  gold: \"#FFD700\",\n  peachpuff: \"#FFDAB9\",\n  navajowhite: \"#FFDEAD\",\n  moccasin: \"#FFE4B5\",\n  bisque: \"#FFE4C4\",\n  mistyrose: \"#FFE4E1\",\n  blanchedalmond: \"#FFEBCD\",\n  papayawhip: \"#FFEFD5\",\n  lavenderblush: \"#FFF0F5\",\n  seashell: \"#FFF5EE\",\n  cornsilk: \"#FFF8DC\",\n  lemonchiffon: \"#FFFACD\",\n  floralwhite: \"#FFFAF0\",\n  snow: \"#FFFAFA\",\n  lightyellow: \"#FFFFE0\",\n  ivory: \"#FFFFF0\"\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\nvar linear = function (k) {\n  return k;\n};\nexports.linear = linear;\nvar quadraticIn = function (k) {\n  return k * k;\n};\nexports.quadraticIn = quadraticIn;\nvar quadraticOut = function (k) {\n  return k * (2 - k);\n};\nexports.quadraticOut = quadraticOut;\nvar quadraticInOut = function (k) {\n  if ((k *= 2) < 1) return 0.5 * k * k;\n  return -0.5 * (--k * (k - 2) - 1);\n};\nexports.quadraticInOut = quadraticInOut;\nvar cubicIn = function (k) {\n  return k * k * k;\n};\nexports.cubicIn = cubicIn;\nvar cubicOut = function (k) {\n  return --k * k * k + 1;\n};\nexports.cubicOut = cubicOut;\nvar cubicInOut = function (k) {\n  if ((k *= 2) < 1) return 0.5 * k * k * k;\n  return 0.5 * ((k -= 2) * k * k + 2);\n};\nexports.cubicInOut = cubicInOut;\nvar easings = {\n  linear: exports.linear,\n  quadraticIn: exports.quadraticIn,\n  quadraticOut: exports.quadraticOut,\n  quadraticInOut: exports.quadraticInOut,\n  cubicIn: exports.cubicIn,\n  cubicOut: exports.cubicOut,\n  cubicInOut: exports.cubicInOut\n};\nexports.default = easings;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;\n/**\n * This helper returns true is the pixel at (x,y) in the given WebGL context is\n * colored, and false else.\n */\nfunction isPixelColored(gl, x, y) {\n  var pixels = new Uint8Array(4);\n  gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  return pixels[3] > 0;\n}\nexports.isPixelColored = isPixelColored;\n/**\n * This helper checks whether or not a point (x, y) collides with an\n * edge, connecting a source (xS, yS) to a target (xT, yT) with a thickness in\n * pixels.\n */\nfunction doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {\n  // Check first if point is out of the rectangle which opposite corners are the\n  // source and the target, rectangle we expand by `thickness` in every\n  // directions:\n  if (x < xS - thickness && x < xT - thickness) return false;\n  if (y < yS - thickness && y < yT - thickness) return false;\n  if (x > xS + thickness && x > xT + thickness) return false;\n  if (y > yS + thickness && y > yT + thickness) return false;\n  // Check actual collision now: Since we now the point is in this big rectangle\n  // we \"just\" need to check that the distance between the point and the line\n  // connecting the source and the target is less than `thickness`:\n  // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n  var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));\n  return distance < thickness / 2;\n}\nexports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;","\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n  return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n  var objects = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    objects[_i - 1] = arguments[_i];\n  }\n  target = target || {};\n  for (var i = 0, l = objects.length; i < l; i++) {\n    var o = objects[i];\n    if (!o) continue;\n    Object.assign(target, o);\n  }\n  return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n  var objects = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    objects[_i - 1] = arguments[_i];\n  }\n  target = target || {};\n  for (var i = 0, l = objects.length; i < l; i++) {\n    var o = objects[i];\n    if (!o) continue;\n    for (var k in o) {\n      if (isPlainObject(o[k])) {\n        target[k] = assignDeep(target[k], o[k]);\n      } else {\n        target[k] = o[k];\n      }\n    }\n  }\n  return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\" ? function (callback) {\n  return requestAnimationFrame(callback);\n} : function (callback) {\n  return setTimeout(callback, 0);\n};\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\" ? function (requestID) {\n  return cancelAnimationFrame(requestID);\n} : function (requestID) {\n  return clearTimeout(requestID);\n};\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n  var element = document.createElement(tag);\n  if (style) {\n    for (var k in style) {\n      element.style[k] = style[k];\n    }\n  }\n  if (attributes) {\n    for (var k in attributes) {\n      element.setAttribute(k, attributes[k]);\n    }\n  }\n  return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n  if (typeof window.devicePixelRatio !== \"undefined\") return window.devicePixelRatio;\n  return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n  if (!graph.order) return {\n    x: [0, 1],\n    y: [0, 1]\n  };\n  var xMin = Infinity;\n  var xMax = -Infinity;\n  var yMin = Infinity;\n  var yMax = -Infinity;\n  graph.forEachNode(function (_, attr) {\n    var x = attr.x,\n      y = attr.y;\n    if (x < xMin) xMin = x;\n    if (x > xMax) xMax = x;\n    if (y < yMin) yMin = y;\n    if (y > yMax) yMax = y;\n  });\n  return {\n    x: [xMin, xMax],\n    y: [yMin, yMax]\n  };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n  var _a = __read(extent.x, 2),\n    minX = _a[0],\n    maxX = _a[1],\n    _b = __read(extent.y, 2),\n    minY = _b[0],\n    maxY = _b[1];\n  var ratio = Math.max(maxX - minX, maxY - minY),\n    dX = (maxX + minX) / 2,\n    dY = (maxY + minY) / 2;\n  if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio)) ratio = 1;\n  if (isNaN(dX)) dX = 0;\n  if (isNaN(dY)) dY = 0;\n  var fn = function (data) {\n    return {\n      x: 0.5 + (data.x - dX) / ratio,\n      y: 0.5 + (data.y - dY) / ratio\n    };\n  };\n  // TODO: possibility to apply this in batch over array of indices\n  fn.applyTo = function (data) {\n    data.x = 0.5 + (data.x - dX) / ratio;\n    data.y = 0.5 + (data.y - dY) / ratio;\n  };\n  fn.inverse = function (data) {\n    return {\n      x: dX + ratio * (data.x - 0.5),\n      y: dY + ratio * (data.y - 0.5)\n    };\n  };\n  fn.ratio = ratio;\n  return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n  // If k is > n, we'll use a standard sort\n  return elements.sort(function (a, b) {\n    var zA = getter(a) || 0,\n      zB = getter(b) || 0;\n    if (zA < zB) return -1;\n    if (zA > zB) return 1;\n    return 0;\n  });\n  // TODO: counting sort optimization\n}\n\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n  var r = 0; // byte\n  var g = 0; // byte\n  var b = 0; // byte\n  var a = 1; // float\n  // Handling hexadecimal notation\n  if (val[0] === \"#\") {\n    if (val.length === 4) {\n      r = parseInt(val.charAt(1) + val.charAt(1), 16);\n      g = parseInt(val.charAt(2) + val.charAt(2), 16);\n      b = parseInt(val.charAt(3) + val.charAt(3), 16);\n    } else {\n      r = parseInt(val.charAt(1) + val.charAt(2), 16);\n      g = parseInt(val.charAt(3) + val.charAt(4), 16);\n      b = parseInt(val.charAt(5) + val.charAt(6), 16);\n    }\n    if (val.length === 9) {\n      a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n    }\n  }\n  // Handling rgb notation\n  else if (RGBA_TEST_REGEX.test(val)) {\n    var match = val.match(RGBA_EXTRACT_REGEX);\n    if (match) {\n      r = +match[1];\n      g = +match[2];\n      b = +match[3];\n      if (match[4]) a = +match[4];\n    }\n  }\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n  FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n  // Replicating cache for hex values for free\n  FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n  val = data_1.HTML_COLORS[val] || val;\n  // NOTE: this variant is not cached because it is mostly used for uniforms\n  var _a = parseColor(val),\n    r = _a.r,\n    g = _a.g,\n    b = _a.b,\n    a = _a.a;\n  return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n  // If the color is already computed, we yield it\n  if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\") return FLOAT_COLOR_CACHE[val];\n  var parsed = parseColor(val);\n  var r = parsed.r,\n    g = parsed.g,\n    b = parsed.b;\n  var a = parsed.a;\n  a = a * 255 | 0;\n  INT32[0] = (a << 24 | b << 16 | g << 8 | r) & 0xfeffffff;\n  var color = FLOAT32[0];\n  FLOAT_COLOR_CACHE[val] = color;\n  return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n  var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n  var graphRatio = graphDimensions.height / graphDimensions.width;\n  // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n  // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n  if (viewportRatio < 1 && graphRatio > 1 || viewportRatio > 1 && graphRatio < 1) {\n    return 1;\n  }\n  // Else, we need to fit the graph inside the stage:\n  // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n  // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n  return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n  var angle = state.angle,\n    ratio = state.ratio,\n    x = state.x,\n    y = state.y;\n  var width = viewportDimensions.width,\n    height = viewportDimensions.height;\n  var matrix = (0, matrices_1.identity)();\n  var smallestDimension = Math.min(width, height) - 2 * padding;\n  var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n  if (!inverse) {\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n  } else {\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n    (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n  }\n  return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n  var _a = (0, matrices_1.multiplyVec2)(matrix, {\n      x: Math.cos(cameraState.angle),\n      y: Math.sin(cameraState.angle)\n    }, 0),\n    x = _a.x,\n    y = _a.y;\n  return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n  var data = array || new Uint8Array(4);\n  gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n  var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n  return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n  // check if it's a valid graphology instance\n  if (!(0, is_graph_1.default)(graph)) throw new Error(\"Sigma: invalid graph instance.\");\n  // check if nodes have x/y attributes\n  graph.forEachNode(function (key, attributes) {\n    if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n      throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n    }\n  });\n}\nexports.validateGraph = validateGraph;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n  return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n  m[0] = x;\n  m[4] = typeof y === \"number\" ? y : x;\n  return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n  var s = Math.sin(r),\n    c = Math.cos(r);\n  m[0] = c;\n  m[1] = s;\n  m[3] = -s;\n  m[4] = c;\n  return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n  m[6] = x;\n  m[7] = y;\n  return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n  if (z === void 0) {\n    z = 1;\n  }\n  var a00 = a[0];\n  var a01 = a[1];\n  var a10 = a[3];\n  var a11 = a[4];\n  var a20 = a[6];\n  var a21 = a[7];\n  var b0 = b.x;\n  var b1 = b.y;\n  return {\n    x: b0 * a00 + b1 * a10 + a20 * z,\n    y: b0 * a01 + b1 * a11 + a21 * z\n  };\n}\nexports.multiplyVec2 = multiplyVec2;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAuBA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAGA;AAWA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClhZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChvhVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrprLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjzpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACphaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}